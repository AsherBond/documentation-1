{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 59,
          "namespace": "default",
          "name": "insert_lines",
          "bundleType": "edit_line",
          "arguments": [
            "lines"
          ],
          "promiseTypes": [
            {
              "line": 61,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 63,
                      "promiser": "$(lines)",
                      "attributes": [
                        {
                          "line": 64,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines if they don\\'t exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 69,
          "namespace": "default",
          "name": "insert_file",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 71,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 73,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 74,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert the template file into the file being edited"
                          }
                        },
                        {
                          "line": 75,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 80,
          "namespace": "default",
          "name": "comment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 85,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 87,
                      "promiser": "^($(regex))$",
                      "attributes": [
                        {
                          "line": 89,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 90,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 95,
          "namespace": "default",
          "name": "uncomment_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 101,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 103,
                      "promiser": "^$(comment)\\s?($(regex))$",
                      "attributes": [
                        {
                          "line": 105,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 106,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment lines matching a regular expression"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 111,
          "namespace": "default",
          "name": "comment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 116,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 118,
                      "promiser": "^((?!$(comment)).*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 120,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "comment",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(comment)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 121,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Comment out lines in a file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 126,
          "namespace": "default",
          "name": "uncomment_lines_containing",
          "bundleType": "edit_line",
          "arguments": [
            "regex",
            "comment"
          ],
          "promiseTypes": [
            {
              "line": 132,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 134,
                      "promiser": "^$(comment)\\s?(.*$(regex).*)$",
                      "attributes": [
                        {
                          "line": 136,
                          "lval": "replace_with",
                          "rval": {
                            "type": "symbol",
                            "value": "uncomment"
                          }
                        },
                        {
                          "line": 137,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Uncomment a line containing a fragment"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 142,
          "namespace": "default",
          "name": "delete_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 144,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 146,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 148,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete lines matching regular expressions"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 153,
          "namespace": "default",
          "name": "warn_lines_matching",
          "bundleType": "edit_line",
          "arguments": [
            "regex"
          ],
          "promiseTypes": [
            {
              "line": 155,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 157,
                      "promiser": "$(regex)",
                      "attributes": [
                        {
                          "line": 159,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Warn about lines in a file"
                          }
                        },
                        {
                          "line": 160,
                          "lval": "action",
                          "rval": {
                            "type": "symbol",
                            "value": "warn_only"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 165,
          "namespace": "default",
          "name": "append_if_no_line",
          "bundleType": "edit_line",
          "arguments": [
            "str"
          ],
          "promiseTypes": [
            {
              "line": 167,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 169,
                      "promiser": "$(str)",
                      "attributes": [
                        {
                          "line": 171,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append a line to the file if it doesn\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 176,
          "namespace": "default",
          "name": "append_if_no_lines",
          "bundleType": "edit_line",
          "arguments": [
            "list"
          ],
          "promiseTypes": [
            {
              "line": 178,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 180,
                      "promiser": "$(list)",
                      "attributes": [
                        {
                          "line": 182,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines to the file if they don\\'t already exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 187,
          "namespace": "default",
          "name": "replace_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 196,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 198,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 199,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 200,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 205,
          "namespace": "default",
          "name": "append_to_line_end",
          "bundleType": "edit_line",
          "arguments": [
            "start",
            "end"
          ],
          "promiseTypes": [
            {
              "line": 227,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 229,
                      "promiser": "\\s*$(start)\\s.*",
                      "attributes": [
                        {
                          "line": 230,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append lines with $(this.start) and $(this.end)"
                          }
                        },
                        {
                          "line": 231,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "(^|\\s)$(start)\\s*"
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$(end)"
                              },
                              {
                                "type": "string",
                                "value": "append"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 236,
          "namespace": "default",
          "name": "regex_replace",
          "bundleType": "edit_line",
          "arguments": [
            "find",
            "replace"
          ],
          "promiseTypes": [
            {
              "line": 240,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 242,
                      "promiser": "$(find)",
                      "attributes": [
                        {
                          "line": 243,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(replace)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 244,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Search and replace string"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 249,
          "namespace": "default",
          "name": "resolvconf",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list"
          ],
          "promiseTypes": [
            {
              "line": 255,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 257,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 257,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 258,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 258,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 260,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 262,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 262,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 263,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 263,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 268,
          "namespace": "default",
          "name": "resolvconf_o",
          "bundleType": "edit_line",
          "arguments": [
            "search",
            "list",
            "options"
          ],
          "promiseTypes": [
            {
              "line": 275,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 277,
                      "promiser": "search.*",
                      "attributes": [
                        {
                          "line": 277,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset search lines from resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 278,
                      "promiser": "nameserver.*",
                      "attributes": [
                        {
                          "line": 278,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset nameservers in resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 279,
                      "promiser": "options.*",
                      "attributes": [
                        {
                          "line": 279,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Reset options in resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 281,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 283,
                      "promiser": "search $(search)",
                      "attributes": [
                        {
                          "line": 283,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add search domains to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 284,
                      "promiser": "nameserver $(list)",
                      "attributes": [
                        {
                          "line": 284,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add name servers to resolver"
                          }
                        }
                      ]
                    },
                    {
                      "line": 285,
                      "promiser": "options $(options)",
                      "attributes": [
                        {
                          "line": 285,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Add options to resolver"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 290,
          "namespace": "default",
          "name": "manage_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 323,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 324,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 324,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 327,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 327,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 329,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 330,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 330,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 331,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 333,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 336,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 337,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 338,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 339,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 342,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 343,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 344,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 345,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "manage_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 346,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 348,
              "name": "delete_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 349,
                      "promiser": ".*",
                      "attributes": [
                        {
                          "line": 350,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 351,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Remove all entries in the region so there are no extra entries"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 353,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 354,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 355,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 356,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 358,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 359,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 360,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!manage_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 366,
          "namespace": "default",
          "name": "set_variable_values_ini",
          "bundleType": "edit_line",
          "arguments": [
            "tab",
            "sectionName"
          ],
          "promiseTypes": [
            {
              "line": 398,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 399,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 399,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(tab)[$(sectionName)]"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 402,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 402,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 404,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 405,
                      "promiser": "edit_$(cindex[$(index)])",
                      "attributes": [
                        {
                          "line": 405,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "dontchange"
                              }
                            ]
                          }
                        },
                        {
                          "line": 406,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Create conditions to make changes"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 408,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 411,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 412,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 413,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 414,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    },
                    {
                      "line": 417,
                      "promiser": "$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 418,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(tab)[$(sectionName)][$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 419,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 420,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "set_variable_values_ini_not_$(cindex[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 421,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 423,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 424,
                      "promiser": "[$(sectionName)]",
                      "attributes": [
                        {
                          "line": 425,
                          "lval": "location",
                          "rval": {
                            "type": "symbol",
                            "value": "start"
                          }
                        },
                        {
                          "line": 426,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert lines"
                          }
                        }
                      ]
                    },
                    {
                      "line": 428,
                      "promiser": "$(index)=$($(tab)[$(sectionName)][$(index)])",
                      "attributes": [
                        {
                          "line": 429,
                          "lval": "select_region",
                          "rval": {
                            "type": "functionCall",
                            "name": "INI_section",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sectionName)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 430,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!set_variable_values_ini_not_$(cindex[$(index)]).edit_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 434,
          "namespace": "default",
          "name": "set_quoted_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 450,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 451,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 451,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 454,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 454,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 456,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 458,
                      "promiser": "#+\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 459,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "1"
                              },
                              {
                                "type": "string",
                                "value": "$(index)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 462,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 463,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "\\\"$($(v)[$(index)])\\\""
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 464,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 465,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 467,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 468,
                      "promiser": "$(index)=\"$($(v)[$(index)])\"",
                      "attributes": [
                        {
                          "line": 469,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 470,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 475,
          "namespace": "default",
          "name": "set_variable_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 489,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 491,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 491,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 495,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 495,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 496,
                      "promiser": "cv",
                      "attributes": [
                        {
                          "line": 496,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 498,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 502,
                      "promiser": "\\s*$(index)\\s*=.*",
                      "attributes": [
                        {
                          "line": 504,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "\\s*$(index)\\s*="
                              },
                              {
                                "type": "string",
                                "value": "2"
                              },
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        },
                        {
                          "line": 505,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_ok",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(cv)_$(cindex[$(index)])_in_file"
                              }
                            ]
                          }
                        },
                        {
                          "line": 506,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Match a line starting like key = something"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 508,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 510,
                      "promiser": "$(index)=$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 512,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert a variable definition"
                          }
                        },
                        {
                          "line": 513,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cv)_$(cindex[$(index)])_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 516,
          "namespace": "default",
          "name": "set_config_values",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 525,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 526,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 526,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 529,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 529,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 531,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 534,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])$).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 535,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 536,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 537,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 539,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 540,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 541,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 545,
          "namespace": "default",
          "name": "set_config_values_matching",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "pat"
          ],
          "promiseTypes": [
            {
              "line": 555,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 556,
                      "promiser": "allparams",
                      "attributes": [
                        {
                          "line": 556,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 557,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 557,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "grep",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(pat)"
                              },
                              {
                                "type": "string",
                                "value": "allparams"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 560,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 560,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 562,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 565,
                      "promiser": "^\\s*($(index)\\s+(?!$($(v)[$(index)])).*|# ?$(index)\\s+.*)$",
                      "attributes": [
                        {
                          "line": 566,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Correct the value"
                          }
                        },
                        {
                          "line": 567,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index) $($(v)[$(index)])"
                              }
                            ]
                          }
                        },
                        {
                          "line": 568,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_attempted_$(cindex[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 570,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 571,
                      "promiser": "$(index) $($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 572,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_attempted_$(cindex[$(index)])"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 578,
          "namespace": "default",
          "name": "maintain_key_values",
          "bundleType": "edit_line",
          "arguments": [
            "v",
            "sep"
          ],
          "promiseTypes": [
            {
              "line": 584,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 585,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 585,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 587,
                      "promiser": "cindex[$(index)]",
                      "attributes": [
                        {
                          "line": 587,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 589,
                      "promiser": "keypat[$(index)]",
                      "attributes": [
                        {
                          "line": 589,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\s*$(index)\\s*$(sep)\\s*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 592,
                      "promiser": "ve[$(index)]",
                      "attributes": [
                        {
                          "line": 592,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 594,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 595,
                      "promiser": "$(cindex[$(index)])_key_in_file",
                      "attributes": [
                        {
                          "line": 596,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Dynamic Class created if patterns matching"
                          }
                        },
                        {
                          "line": 597,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regline",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "^$(keypat[$(index)]).*"
                              },
                              {
                                "type": "string",
                                "value": "$(edit.filename)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 599,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 602,
                      "promiser": "^($(keypat[$(index)]))(?!$(ve[$(index)])$).*",
                      "attributes": [
                        {
                          "line": 603,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace definition of $(index)"
                          }
                        },
                        {
                          "line": 604,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(match.1)$($(v)[$(index)])"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 606,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 607,
                      "promiser": "$(index)$(sep)$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 608,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Insert definition of $(index)"
                          }
                        },
                        {
                          "line": 609,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "!$(cindex[$(index)])_key_in_file"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 614,
          "namespace": "default",
          "name": "append_users_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 620,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 622,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 622,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 624,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 626,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 626,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "userexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 627,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if user does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 629,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 631,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 633,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 634,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 639,
          "namespace": "default",
          "name": "append_groups_starting",
          "bundleType": "edit_line",
          "arguments": [
            "v"
          ],
          "promiseTypes": [
            {
              "line": 645,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 647,
                      "promiser": "index",
                      "attributes": [
                        {
                          "line": 647,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "getindices",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(v)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 649,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 651,
                      "promiser": "add_$(index)",
                      "attributes": [
                        {
                          "line": 651,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "groupexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(index)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 652,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Class created if group does not exist"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 654,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 656,
                      "promiser": "$($(v)[$(index)])",
                      "attributes": [
                        {
                          "line": 658,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a group file format"
                          }
                        },
                        {
                          "line": 659,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "add_$(index)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 665,
          "namespace": "default",
          "name": "set_colon_field",
          "bundleType": "edit_line",
          "arguments": [
            "key",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 671,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 673,
                      "promiser": "$(key):.*",
                      "attributes": [
                        {
                          "line": 675,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a colon-separated file, using the first field as a key"
                          }
                        },
                        {
                          "line": 676,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 681,
          "namespace": "default",
          "name": "set_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "user",
            "field",
            "val"
          ],
          "promiseTypes": [
            {
              "line": 687,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 689,
                      "promiser": "$(user):.*",
                      "attributes": [
                        {
                          "line": 691,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Edit a user attribute in the password file"
                          }
                        },
                        {
                          "line": 692,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "set"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 697,
          "namespace": "default",
          "name": "append_user_field",
          "bundleType": "edit_line",
          "arguments": [
            "group",
            "field",
            "allusers"
          ],
          "promiseTypes": [
            {
              "line": 703,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 705,
                      "promiser": "val",
                      "attributes": [
                        {
                          "line": 705,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "@(allusers)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 707,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 709,
                      "promiser": "$(group):.*",
                      "attributes": [
                        {
                          "line": 711,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Append users into a password file format"
                          }
                        },
                        {
                          "line": 712,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "col",
                            "arguments": [
                              {
                                "type": "string",
                                "value": ":"
                              },
                              {
                                "type": "string",
                                "value": "$(field)"
                              },
                              {
                                "type": "string",
                                "value": "$(val)"
                              },
                              {
                                "type": "string",
                                "value": "alphanum"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 717,
          "namespace": "default",
          "name": "expand_template",
          "bundleType": "edit_line",
          "arguments": [
            "templatefile"
          ],
          "promiseTypes": [
            {
              "line": 723,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 725,
                      "promiser": "$(templatefile)",
                      "attributes": [
                        {
                          "line": 727,
                          "lval": "insert_type",
                          "rval": {
                            "type": "string",
                            "value": "file"
                          }
                        },
                        {
                          "line": 728,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Expand variables in the template file"
                          }
                        },
                        {
                          "line": 729,
                          "lval": "expand_scalars",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 732,
          "namespace": "default",
          "name": "replace_or_add",
          "bundleType": "edit_line",
          "arguments": [
            "pattern",
            "line"
          ],
          "promiseTypes": [
            {
              "line": 741,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 742,
                      "promiser": "cline",
                      "attributes": [
                        {
                          "line": 742,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 743,
                      "promiser": "eline",
                      "attributes": [
                        {
                          "line": 743,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "escape",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 745,
              "name": "replace_patterns",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 746,
                      "promiser": "^(?!$(eline)$)$(pattern)$",
                      "attributes": [
                        {
                          "line": 747,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Replace a pattern here"
                          }
                        },
                        {
                          "line": 748,
                          "lval": "replace_with",
                          "rval": {
                            "type": "functionCall",
                            "name": "value",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(line)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 749,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "always",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "replace_done_$(cline)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 751,
              "name": "insert_lines",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 752,
                      "promiser": "$(line)",
                      "attributes": [
                        {
                          "line": 753,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "replace_done_$(cline)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 756,
          "namespace": "default",
          "name": "fstab_option_editor",
          "bundleType": "edit_line",
          "arguments": [
            "method",
            "mount",
            "option"
          ],
          "promiseTypes": [
            {
              "line": 773,
              "name": "field_edits",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 774,
                      "promiser": "(?!#)\\S+\\s+$(mount)\\s.+",
                      "attributes": [
                        {
                          "line": 775,
                          "lval": "edit_field",
                          "rval": {
                            "type": "functionCall",
                            "name": "fstab_options",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(option)"
                              },
                              {
                                "type": "string",
                                "value": "$(method)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 50,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 52,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(sys.local_libdir)/common.cf"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 782,
          "namespace": "default",
          "name": "fstab_options",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 799,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\s+"
                  }
                },
                {
                  "line": 800,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "4"
                  }
                },
                {
                  "line": 801,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 802,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 803,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 806,
          "namespace": "default",
          "name": "quoted_var",
          "bodyType": "edit_field",
          "arguments": [
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 808,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "\\\""
                  }
                },
                {
                  "line": 809,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "2"
                  }
                },
                {
                  "line": 810,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 811,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 812,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 813,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 814,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 819,
          "namespace": "default",
          "name": "col",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 821,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 822,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 823,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": ","
                  }
                },
                {
                  "line": 824,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 825,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 826,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 827,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 832,
          "namespace": "default",
          "name": "line",
          "bodyType": "edit_field",
          "arguments": [
            "split",
            "col",
            "newval",
            "method"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 834,
                  "lval": "field_separator",
                  "rval": {
                    "type": "string",
                    "value": "$(split)"
                  }
                },
                {
                  "line": 835,
                  "lval": "select_field",
                  "rval": {
                    "type": "string",
                    "value": "$(col)"
                  }
                },
                {
                  "line": 836,
                  "lval": "value_separator",
                  "rval": {
                    "type": "string",
                    "value": " "
                  }
                },
                {
                  "line": 837,
                  "lval": "field_value",
                  "rval": {
                    "type": "string",
                    "value": "$(newval)"
                  }
                },
                {
                  "line": 838,
                  "lval": "field_operation",
                  "rval": {
                    "type": "string",
                    "value": "$(method)"
                  }
                },
                {
                  "line": 839,
                  "lval": "extend_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 840,
                  "lval": "allow_blank_fields",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 845,
          "namespace": "default",
          "name": "value",
          "bodyType": "replace_with",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 847,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 848,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 853,
          "namespace": "default",
          "name": "INI_section",
          "bodyType": "select_region",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 855,
                  "lval": "select_start",
                  "rval": {
                    "type": "string",
                    "value": "\\[$(x)\\]\\s*"
                  }
                },
                {
                  "line": 856,
                  "lval": "select_end",
                  "rval": {
                    "type": "string",
                    "value": "\\[.*\\]\\s*"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 863,
          "namespace": "default",
          "name": "std_defs",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 865,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 866,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 872,
          "namespace": "default",
          "name": "empty",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 874,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 875,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 881,
          "namespace": "default",
          "name": "no_backup",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 883,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 888,
          "namespace": "default",
          "name": "backup_timestamp",
          "bodyType": "edit_defaults",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 890,
                  "lval": "empty_file_before_editing",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 891,
                  "lval": "edit_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 899,
          "namespace": "default",
          "name": "start",
          "bodyType": "location",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 901,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 906,
          "namespace": "default",
          "name": "after",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 908,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "after"
                  }
                },
                {
                  "line": 909,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 914,
          "namespace": "default",
          "name": "before",
          "bodyType": "location",
          "arguments": [
            "str"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 916,
                  "lval": "before_after",
                  "rval": {
                    "type": "string",
                    "value": "before"
                  }
                },
                {
                  "line": 917,
                  "lval": "select_line_matching",
                  "rval": {
                    "type": "string",
                    "value": "$(str)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 926,
          "namespace": "default",
          "name": "comment",
          "bodyType": "replace_with",
          "arguments": [
            "c"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 928,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(c) $(match.1)"
                  }
                },
                {
                  "line": 929,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 934,
          "namespace": "default",
          "name": "uncomment",
          "bodyType": "replace_with",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 936,
                  "lval": "replace_value",
                  "rval": {
                    "type": "string",
                    "value": "$(match.1)"
                  }
                },
                {
                  "line": 937,
                  "lval": "occurrences",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 944,
          "namespace": "default",
          "name": "secure_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 946,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 947,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 948,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                },
                {
                  "line": 949,
                  "lval": "encrypt",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 950,
                  "lval": "verify",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 955,
          "namespace": "default",
          "name": "remote_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 957,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 958,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 959,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 964,
          "namespace": "default",
          "name": "remote_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 966,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 967,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 968,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 973,
          "namespace": "default",
          "name": "local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 975,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 980,
          "namespace": "default",
          "name": "local_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 982,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 983,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 988,
          "namespace": "default",
          "name": "perms_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 990,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 991,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 994,
          "namespace": "default",
          "name": "backup_local_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 997,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 998,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "timestamp"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1005,
          "namespace": "default",
          "name": "seed_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1007,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1008,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "exists"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1013,
          "namespace": "default",
          "name": "sync_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1015,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1016,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1017,
                  "lval": "purge",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1018,
                  "lval": "preserve",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1019,
                  "lval": "type_check",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1024,
          "namespace": "default",
          "name": "no_backup_cp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1026,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1027,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1032,
          "namespace": "default",
          "name": "no_backup_dcp",
          "bodyType": "copy_from",
          "arguments": [
            "from"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1034,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1035,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                },
                {
                  "line": 1036,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "digest"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1041,
          "namespace": "default",
          "name": "no_backup_rcp",
          "bodyType": "copy_from",
          "arguments": [
            "from",
            "server"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1043,
                  "lval": "servers",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(server)"
                      }
                    ]
                  }
                },
                {
                  "line": 1044,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(from)"
                  }
                },
                {
                  "line": 1045,
                  "lval": "compare",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                },
                {
                  "line": 1046,
                  "lval": "copy_backup",
                  "rval": {
                    "type": "string",
                    "value": "false"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1053,
          "namespace": "default",
          "name": "ln_s",
          "bodyType": "link_from",
          "arguments": [
            "x"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1055,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1056,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(x)"
                  }
                },
                {
                  "line": 1057,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1062,
          "namespace": "default",
          "name": "linkchildren",
          "bodyType": "link_from",
          "arguments": [
            "tofile"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1064,
                  "lval": "source",
                  "rval": {
                    "type": "string",
                    "value": "$(tofile)"
                  }
                },
                {
                  "line": 1065,
                  "lval": "link_type",
                  "rval": {
                    "type": "string",
                    "value": "symlink"
                  }
                },
                {
                  "line": 1066,
                  "lval": "when_no_source",
                  "rval": {
                    "type": "string",
                    "value": "force"
                  }
                },
                {
                  "line": 1067,
                  "lval": "link_children",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1068,
                  "lval": "when_linking_children",
                  "rval": {
                    "type": "string",
                    "value": "if_no_such_file"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1075,
          "namespace": "default",
          "name": "m",
          "bodyType": "perms",
          "arguments": [
            "mode"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1077,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1082,
          "namespace": "default",
          "name": "mo",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1084,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1085,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1090,
          "namespace": "default",
          "name": "mog",
          "bodyType": "perms",
          "arguments": [
            "mode",
            "user",
            "group"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1092,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                },
                {
                  "line": 1093,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(group)"
                      }
                    ]
                  }
                },
                {
                  "line": 1094,
                  "lval": "mode",
                  "rval": {
                    "type": "string",
                    "value": "$(mode)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1099,
          "namespace": "default",
          "name": "og",
          "bodyType": "perms",
          "arguments": [
            "u",
            "g"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1101,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(u)"
                      }
                    ]
                  }
                },
                {
                  "line": 1102,
                  "lval": "groups",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(g)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1107,
          "namespace": "default",
          "name": "owner",
          "bodyType": "perms",
          "arguments": [
            "user"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1109,
                  "lval": "owners",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(user)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1116,
          "namespace": "default",
          "name": "access_generic",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1120,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1121,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1124,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1127,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "posix"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1132,
          "namespace": "default",
          "name": "ntfs",
          "bodyType": "acl",
          "arguments": [
            "acl"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1134,
                  "lval": "acl_type",
                  "rval": {
                    "type": "string",
                    "value": "ntfs"
                  }
                },
                {
                  "line": 1135,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                },
                {
                  "line": 1136,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(acl)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1141,
          "namespace": "default",
          "name": "strict",
          "bodyType": "acl",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1145,
                  "lval": "acl_method",
                  "rval": {
                    "type": "string",
                    "value": "overwrite"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 1148,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:Administrator:rwx"
                      }
                    ]
                  }
                }
              ]
            },
            {
              "name": "!windows",
              "attributes": [
                {
                  "line": 1150,
                  "lval": "aces",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "user:root:rwx"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1157,
          "namespace": "default",
          "name": "recurse",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1160,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1161,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1166,
          "namespace": "default",
          "name": "recurse_ignore",
          "bodyType": "depth_search",
          "arguments": [
            "d",
            "list"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1168,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1169,
                  "lval": "exclude_dirs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(list)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1174,
          "namespace": "default",
          "name": "include_base",
          "bodyType": "depth_search",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1176,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1179,
          "namespace": "default",
          "name": "recurse_with_base",
          "bodyType": "depth_search",
          "arguments": [
            "d"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1181,
                  "lval": "depth",
                  "rval": {
                    "type": "string",
                    "value": "$(d)"
                  }
                },
                {
                  "line": 1182,
                  "lval": "xdev",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1183,
                  "lval": "include_basedir",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1190,
          "namespace": "default",
          "name": "tidy",
          "bodyType": "delete",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1193,
                  "lval": "dirlinks",
                  "rval": {
                    "type": "string",
                    "value": "delete"
                  }
                },
                {
                  "line": 1194,
                  "lval": "rmdirs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1201,
          "namespace": "default",
          "name": "disable",
          "bodyType": "rename",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1203,
                  "lval": "disable",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1208,
          "namespace": "default",
          "name": "rotate",
          "bodyType": "rename",
          "arguments": [
            "level"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1210,
                  "lval": "rotate",
                  "rval": {
                    "type": "string",
                    "value": "$(level)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1215,
          "namespace": "default",
          "name": "to",
          "bodyType": "rename",
          "arguments": [
            "file"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1217,
                  "lval": "newname",
                  "rval": {
                    "type": "string",
                    "value": "$(file)"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1224,
          "namespace": "default",
          "name": "name_age",
          "bodyType": "file_select",
          "arguments": [
            "name",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1226,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1227,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1228,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime.leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1233,
          "namespace": "default",
          "name": "days_old",
          "bodyType": "file_select",
          "arguments": [
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1235,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1236,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1241,
          "namespace": "default",
          "name": "size_range",
          "bodyType": "file_select",
          "arguments": [
            "from",
            "to"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1243,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "$(from)"
                      },
                      {
                        "type": "string",
                        "value": "$(to)"
                      }
                    ]
                  }
                },
                {
                  "line": 1244,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1249,
          "namespace": "default",
          "name": "bigger_than",
          "bodyType": "file_select",
          "arguments": [
            "size"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1251,
                  "lval": "search_size",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "string",
                        "value": "$(size)"
                      }
                    ]
                  }
                },
                {
                  "line": 1252,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!size"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1257,
          "namespace": "default",
          "name": "exclude",
          "bodyType": "file_select",
          "arguments": [
            "name"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1259,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(name)"
                      }
                    ]
                  }
                },
                {
                  "line": 1260,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1265,
          "namespace": "default",
          "name": "plain",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1267,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "plain"
                      }
                    ]
                  }
                },
                {
                  "line": 1268,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1271,
          "namespace": "default",
          "name": "dirs",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1273,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "dir"
                      }
                    ]
                  }
                },
                {
                  "line": 1274,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1279,
          "namespace": "default",
          "name": "by_name",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1281,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1282,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1287,
          "namespace": "default",
          "name": "ex_list",
          "bodyType": "file_select",
          "arguments": [
            "names"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1289,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(names)"
                      }
                    ]
                  }
                },
                {
                  "line": 1290,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "!leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1295,
          "namespace": "default",
          "name": "all",
          "bodyType": "file_select",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1297,
                  "lval": "leaf_name",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": ".*"
                      }
                    ]
                  }
                },
                {
                  "line": 1298,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "leaf_name"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1303,
          "namespace": "default",
          "name": "older_than",
          "bodyType": "file_select",
          "arguments": [
            "years",
            "months",
            "days",
            "hours",
            "minutes",
            "seconds"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1307,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "$(years)"
                          },
                          {
                            "type": "string",
                            "value": "$(months)"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "$(hours)"
                          },
                          {
                            "type": "string",
                            "value": "$(minutes)"
                          },
                          {
                            "type": "string",
                            "value": "$(seconds)"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1308,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1313,
          "namespace": "default",
          "name": "filetype_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetype",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1318,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(filetype)"
                      }
                    ]
                  }
                },
                {
                  "line": 1319,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1320,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1325,
          "namespace": "default",
          "name": "filetypes_older_than",
          "bodyType": "file_select",
          "arguments": [
            "filetypes",
            "days"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1329,
                  "lval": "file_types",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(filetypes)"
                      }
                    ]
                  }
                },
                {
                  "line": 1330,
                  "lval": "mtime",
                  "rval": {
                    "type": "functionCall",
                    "name": "irange",
                    "arguments": [
                      {
                        "type": "string",
                        "value": "0"
                      },
                      {
                        "type": "functionCall",
                        "name": "ago",
                        "arguments": [
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "$(days)"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          },
                          {
                            "type": "string",
                            "value": "0"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "line": 1331,
                  "lval": "file_result",
                  "rval": {
                    "type": "string",
                    "value": "file_types.mtime"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1338,
          "namespace": "default",
          "name": "detect_all_change",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1343,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "best"
                  }
                },
                {
                  "line": 1344,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1345,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1350,
          "namespace": "default",
          "name": "detect_all_change_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1358,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1359,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1360,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1365,
          "namespace": "default",
          "name": "detect_content",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1370,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "md5"
                  }
                },
                {
                  "line": 1371,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1372,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1377,
          "namespace": "default",
          "name": "detect_content_using",
          "bodyType": "changes",
          "arguments": [
            "hash"
          ],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1385,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "$(hash)"
                  }
                },
                {
                  "line": 1386,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1387,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1392,
          "namespace": "default",
          "name": "noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1395,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1396,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1397,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1402,
          "namespace": "default",
          "name": "diff",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1405,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1406,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1407,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1408,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1413,
          "namespace": "default",
          "name": "all_changes",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1416,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1417,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "all"
                  }
                },
                {
                  "line": 1418,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1419,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "yes"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/files.cf",
          "line": 1424,
          "namespace": "default",
          "name": "diff_noupdate",
          "bodyType": "changes",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 1426,
                  "lval": "hash",
                  "rval": {
                    "type": "string",
                    "value": "sha256"
                  }
                },
                {
                  "line": 1427,
                  "lval": "report_changes",
                  "rval": {
                    "type": "string",
                    "value": "content"
                  }
                },
                {
                  "line": 1428,
                  "lval": "report_diffs",
                  "rval": {
                    "type": "string",
                    "value": "true"
                  }
                },
                {
                  "line": 1429,
                  "lval": "update_hashes",
                  "rval": {
                    "type": "string",
                    "value": "no"
                  }
                }
              ]
            }
          ]
        }
      ]
    }