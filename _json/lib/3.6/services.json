{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 50,
          "namespace": "default",
          "name": "services_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 54,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/paths.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 95,
          "namespace": "default",
          "name": "standard_services",
          "bundleType": "agent",
          "arguments": [
            "service",
            "state"
          ],
          "promiseTypes": [
            {
              "line": 136,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 137,
                      "promiser": "call_systemctl",
                      "attributes": [
                        {
                          "line": 137,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(paths.sysctl) --no-ask-password --global --system"
                          }
                        }
                      ]
                    },
                    {
                      "line": 138,
                      "promiser": "init",
                      "attributes": [
                        {
                          "line": 138,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/etc/init.d/$(service)"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "start|restart|reload",
                  "promises": [
                    {
                      "line": 141,
                      "promiser": "chkconfig_mode",
                      "attributes": [
                        {
                          "line": 141,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "on"
                          }
                        }
                      ]
                    },
                    {
                      "line": 142,
                      "promiser": "svcadm_mode",
                      "attributes": [
                        {
                          "line": 142,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "enable"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stop|disable",
                  "promises": [
                    {
                      "line": 145,
                      "promiser": "chkconfig_mode",
                      "attributes": [
                        {
                          "line": 145,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "off"
                          }
                        }
                      ]
                    },
                    {
                      "line": 146,
                      "promiser": "svcadm_mode",
                      "attributes": [
                        {
                          "line": 146,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "disable"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 148,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 150,
                      "promiser": "$(state)",
                      "attributes": [
                        {
                          "line": 150,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "any"
                          }
                        }
                      ]
                    },
                    {
                      "line": 151,
                      "promiser": "non_disabling",
                      "attributes": [
                        {
                          "line": 151,
                          "lval": "or",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "start"
                              },
                              {
                                "type": "string",
                                "value": "stop"
                              },
                              {
                                "type": "string",
                                "value": "restart"
                              },
                              {
                                "type": "string",
                                "value": "reload"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 153,
                      "promiser": "chkconfig",
                      "attributes": [
                        {
                          "line": 153,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "!systemd._stdlib_path_exists_chkconfig"
                          }
                        }
                      ]
                    },
                    {
                      "line": 154,
                      "promiser": "sysvservice",
                      "attributes": [
                        {
                          "line": 154,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "!systemd.!chkconfig._stdlib_path_exists_service"
                          }
                        }
                      ]
                    },
                    {
                      "line": 155,
                      "promiser": "smf",
                      "attributes": [
                        {
                          "line": 155,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "!systemd.!chkconfig.!sysvservice._stdlib_path_exists_svcadm"
                          }
                        }
                      ]
                    },
                    {
                      "line": 156,
                      "promiser": "fallback",
                      "attributes": [
                        {
                          "line": 156,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "!systemd.!chkconfig.!sysvservice.!smf"
                          }
                        }
                      ]
                    },
                    {
                      "line": 158,
                      "promiser": "have_init",
                      "attributes": [
                        {
                          "line": 158,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(init)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "chkconfig",
                  "promises": [
                    {
                      "line": 161,
                      "promiser": "chkconfig_$(service)_registerd",
                      "attributes": [
                        {
                          "line": 161,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "returnszero",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(paths.chkconfig) $(service)"
                              },
                              {
                                "type": "string",
                                "value": "noshell"
                              }
                            ]
                          }
                        },
                        {
                          "line": 162,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "We need to know if the service is registered with chkconfig before we can control it"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 164,
              "name": "commands",
              "contexts": [
                {
                  "name": "systemd",
                  "promises": [
                    {
                      "line": 168,
                      "promiser": "$(call_systemctl) $(state) $(service)",
                      "attributes": [
                        {
                          "line": 169,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "systemd.start",
                  "promises": [
                    {
                      "line": 173,
                      "promiser": "$(call_systemctl) enable $(service)",
                      "attributes": [
                        {
                          "line": 174,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "chkconfig",
                  "promises": [
                    {
                      "line": 177,
                      "promiser": "$(paths.chkconfig) $(service) $(chkconfig_mode)",
                      "attributes": [
                        {
                          "line": 178,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 179,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "chkconfig_$(service)_registered"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "chkconfig.have_init.non_disabling",
                  "promises": [
                    {
                      "line": 182,
                      "promiser": "$(init) $(state)",
                      "attributes": [
                        {
                          "line": 183,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 184,
                          "lval": "contain",
                          "rval": {
                            "type": "symbol",
                            "value": "silent"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "sysvservice.non_disabling",
                  "promises": [
                    {
                      "line": 187,
                      "promiser": "$(paths.service) $(service) $(state)",
                      "attributes": [
                        {
                          "line": 188,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "sysvservice.disable",
                  "promises": [
                    {
                      "line": 191,
                      "promiser": "$(paths.service) $(service) stop",
                      "attributes": [
                        {
                          "line": 192,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "smf",
                  "promises": [
                    {
                      "line": 195,
                      "promiser": "$(paths.svcadm) $(svcadm_mode) $(service)",
                      "attributes": [
                        {
                          "line": 196,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 198,
              "name": "methods",
              "contexts": [
                {
                  "name": "fallback",
                  "promises": [
                    {
                      "line": 200,
                      "promiser": "classic",
                      "attributes": [
                        {
                          "line": 200,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "classic_services",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(service)"
                              },
                              {
                                "type": "string",
                                "value": "$(state)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 202,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode.systemd",
                  "promises": [
                    {
                      "line": 204,
                      "promiser": "$(this.bundle): using systemd layer to $(state) $(service)",
                      "attributes": []
                    }
                  ]
                },
                {
                  "name": "inform_mode.chkconfig",
                  "promises": [
                    {
                      "line": 206,
                      "promiser": "$(this.bundle): using chkconfig layer to $(state) $(service) (chkconfig mode $(chkconfig_mode))",
                      "attributes": [
                        {
                          "line": 207,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "chkconfig_$(service)_registered"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 209,
                      "promiser": "$(this.bundle): skipping chkconfig layer to $(state) $(service) because $(service) is not registered with chkconfig (chkconfig mode $(chkconfig_mode))",
                      "attributes": [
                        {
                          "line": 210,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "!chkconfig_$(service)_registered"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "inform_mode.sysvservice",
                  "promises": [
                    {
                      "line": 212,
                      "promiser": "$(this.bundle): using System V service / Upstart layer to $(state) $(service)",
                      "attributes": []
                    }
                  ]
                },
                {
                  "name": "inform_mode.smf",
                  "promises": [
                    {
                      "line": 214,
                      "promiser": "$(this.bundle): using Solaris SMF to $(state) $(service) (svcadm mode $(svcadm_mode))",
                      "attributes": []
                    }
                  ]
                },
                {
                  "name": "inform_mode.fallback",
                  "promises": [
                    {
                      "line": 216,
                      "promiser": "$(this.bundle): falling back to classic_services to $(state) $(service)",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 219,
          "namespace": "default",
          "name": "classic_services",
          "bundleType": "agent",
          "arguments": [
            "service",
            "state"
          ],
          "promiseTypes": [
            {
              "line": 348,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 349,
                      "promiser": "all_states",
                      "attributes": [
                        {
                          "line": 349,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "start"
                              },
                              {
                                "type": "string",
                                "value": "restart"
                              },
                              {
                                "type": "string",
                                "value": "reload"
                              },
                              {
                                "type": "string",
                                "value": "stop"
                              },
                              {
                                "type": "string",
                                "value": "disable"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 351,
                      "promiser": "inits",
                      "attributes": [
                        {
                          "line": 351,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "sysvinitd"
                              },
                              {
                                "type": "string",
                                "value": "sysvservice"
                              },
                              {
                                "type": "string",
                                "value": "systemd"
                              },
                              {
                                "type": "string",
                                "value": "chkconfig"
                              }
                            ]
                          }
                        },
                        {
                          "line": 352,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Currently handled init systems"
                          }
                        }
                      ]
                    },
                    {
                      "line": 354,
                      "promiser": "default[prefix][sysvservice]",
                      "attributes": [
                        {
                          "line": 354,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(paths.service) "
                          }
                        },
                        {
                          "line": 355,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command for sysv service interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 357,
                      "promiser": "default[prefix][systemd]",
                      "attributes": [
                        {
                          "line": 357,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(paths.systemctl) "
                          }
                        },
                        {
                          "line": 358,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command for systemd interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 360,
                      "promiser": "default[prefix][sysvinitd]",
                      "attributes": [
                        {
                          "line": 363,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "ifelse",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "openbsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "freebsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "netbsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "/etc/init.d/"
                              }
                            ]
                          }
                        },
                        {
                          "line": 364,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command prefix for sysv init script interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 366,
                      "promiser": "default[prefix][chkconfig]",
                      "attributes": [
                        {
                          "line": 366,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][sysvinitd])"
                          }
                        },
                        {
                          "line": 367,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command prefix for chkconfig init script interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 369,
                      "promiser": "default[cmd][$(inits)]",
                      "attributes": [
                        {
                          "line": 369,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(service) $(state)"
                          }
                        },
                        {
                          "line": 370,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Default command to control the service"
                          }
                        }
                      ]
                    },
                    {
                      "line": 372,
                      "promiser": "default[pattern]",
                      "attributes": [
                        {
                          "line": 372,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\b$(service)\\b"
                          }
                        },
                        {
                          "line": 373,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Set default pattern for proc matching"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "_stdlib_path_exists_chkconfig",
                  "promises": [
                    {
                      "line": 376,
                      "promiser": "default[init]",
                      "attributes": [
                        {
                          "line": 376,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "chkconfig"
                          }
                        },
                        {
                          "line": 377,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Use chkconfig as the default init system if one isn\\'t defined"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!_stdlib_path_exists_chkconfig",
                  "promises": [
                    {
                      "line": 380,
                      "promiser": "default[init]",
                      "attributes": [
                        {
                          "line": 380,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sysvinitd"
                          }
                        },
                        {
                          "line": 381,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Use sysvinitd as the default init system if one isn\\'t defined"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "no_inits_set",
                  "promises": [
                    {
                      "line": 384,
                      "promiser": "init_system",
                      "attributes": [
                        {
                          "line": 384,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(default[init])"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 387,
                      "promiser": "init_system",
                      "attributes": [
                        {
                          "line": 387,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(init[$(service)])"
                          }
                        },
                        {
                          "line": 388,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "$(inits_set)"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "start|restart|reload",
                  "promises": [
                    {
                      "line": 391,
                      "promiser": "chkconfig_mode",
                      "attributes": [
                        {
                          "line": 391,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "on"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stop|disable",
                  "promises": [
                    {
                      "line": 394,
                      "promiser": "chkconfig_mode",
                      "attributes": [
                        {
                          "line": 394,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "off"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 397,
                      "promiser": "stakeholders[cfengine3]",
                      "attributes": [
                        {
                          "line": 397,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "cfengine_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 398,
                      "promiser": "stakeholders[acpid]",
                      "attributes": [
                        {
                          "line": 398,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "cpu"
                              },
                              {
                                "type": "string",
                                "value": "cpu0"
                              },
                              {
                                "type": "string",
                                "value": "cpu1"
                              },
                              {
                                "type": "string",
                                "value": "cpu2"
                              },
                              {
                                "type": "string",
                                "value": "cpu3"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 399,
                      "promiser": "stakeholders[postfix]",
                      "attributes": [
                        {
                          "line": 399,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "smtp_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 400,
                      "promiser": "stakeholders[sendmail]",
                      "attributes": [
                        {
                          "line": 400,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "smtp_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 401,
                      "promiser": "stakeholders[www]",
                      "attributes": [
                        {
                          "line": 401,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_in"
                              },
                              {
                                "type": "string",
                                "value": "wwws_in"
                              },
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 402,
                      "promiser": "stakeholders[ssh]",
                      "attributes": [
                        {
                          "line": 402,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "ssh_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 403,
                      "promiser": "stakeholders[mysql]",
                      "attributes": [
                        {
                          "line": 403,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "mysql_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 404,
                      "promiser": "stakeholders[nfs]",
                      "attributes": [
                        {
                          "line": 404,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "nfsd_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 405,
                      "promiser": "stakeholders[syslog]",
                      "attributes": [
                        {
                          "line": 405,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "syslog"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 406,
                      "promiser": "stakeholders[rsyslog]",
                      "attributes": [
                        {
                          "line": 406,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "syslog"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 407,
                      "promiser": "stakeholders[tomcat5]",
                      "attributes": [
                        {
                          "line": 407,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 408,
                      "promiser": "stakeholders[tomcat6]",
                      "attributes": [
                        {
                          "line": 408,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "linux",
                  "promises": [
                    {
                      "line": 412,
                      "promiser": "pattern[acpid]",
                      "attributes": [
                        {
                          "line": 412,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*acpid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 413,
                      "promiser": "pattern[cfengine3]",
                      "attributes": [
                        {
                          "line": 413,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cf-execd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 414,
                      "promiser": "pattern[fancontrol]",
                      "attributes": [
                        {
                          "line": 414,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*fancontrol.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 415,
                      "promiser": "pattern[hddtemp]",
                      "attributes": [
                        {
                          "line": 415,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hddtemp.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 416,
                      "promiser": "pattern[irqbalance]",
                      "attributes": [
                        {
                          "line": 416,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*irqbalance.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 417,
                      "promiser": "pattern[lm-sensor]",
                      "attributes": [
                        {
                          "line": 417,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*psensor.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 418,
                      "promiser": "pattern[openvpn]",
                      "attributes": [
                        {
                          "line": 418,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*openvpn.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 419,
                      "promiser": "pattern[postfix]",
                      "attributes": [
                        {
                          "line": 419,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postfix.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 420,
                      "promiser": "pattern[rsync]",
                      "attributes": [
                        {
                          "line": 420,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rsync.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 421,
                      "promiser": "pattern[rsyslog]",
                      "attributes": [
                        {
                          "line": 421,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rsyslogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 422,
                      "promiser": "pattern[sendmail]",
                      "attributes": [
                        {
                          "line": 422,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*sendmail.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 423,
                      "promiser": "pattern[tomcat5]",
                      "attributes": [
                        {
                          "line": 423,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tomcat5.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 424,
                      "promiser": "pattern[tomcat6]",
                      "attributes": [
                        {
                          "line": 424,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tomcat6.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 425,
                      "promiser": "pattern[varnish]",
                      "attributes": [
                        {
                          "line": 425,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*varnish.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 426,
                      "promiser": "pattern[wpa_supplicant]",
                      "attributes": [
                        {
                          "line": 426,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*wpa_supplicant.*"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "suse",
                  "promises": [
                    {
                      "line": 430,
                      "promiser": "baseinit[mysql]",
                      "attributes": [
                        {
                          "line": 430,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "mysqld"
                          }
                        }
                      ]
                    },
                    {
                      "line": 431,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 431,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 433,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 433,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "apache2"
                          }
                        }
                      ]
                    },
                    {
                      "line": 434,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 434,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*apache2.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 436,
                      "promiser": "baseinit[ssh]",
                      "attributes": [
                        {
                          "line": 436,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sshd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 438,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 438,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 440,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 440,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "redhat",
                  "promises": [
                    {
                      "line": 444,
                      "promiser": "pattern[anacron]",
                      "attributes": [
                        {
                          "line": 444,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*anacron.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 445,
                      "promiser": "pattern[atd]",
                      "attributes": [
                        {
                          "line": 445,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*sbin/atd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 446,
                      "promiser": "pattern[auditd]",
                      "attributes": [
                        {
                          "line": 446,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*auditd$"
                          }
                        }
                      ]
                    },
                    {
                      "line": 447,
                      "promiser": "pattern[autofs]",
                      "attributes": [
                        {
                          "line": 447,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*automount.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 448,
                      "promiser": "pattern[capi]",
                      "attributes": [
                        {
                          "line": 448,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*capiinit.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 449,
                      "promiser": "pattern[conman]",
                      "attributes": [
                        {
                          "line": 449,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*conmand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 450,
                      "promiser": "pattern[cpuspeed]",
                      "attributes": [
                        {
                          "line": 450,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cpuspeed.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 451,
                      "promiser": "pattern[crond]",
                      "attributes": [
                        {
                          "line": 451,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*crond.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 452,
                      "promiser": "pattern[dc_client]",
                      "attributes": [
                        {
                          "line": 452,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dc_client.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 453,
                      "promiser": "pattern[dc_server]",
                      "attributes": [
                        {
                          "line": 453,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dc_server.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 454,
                      "promiser": "pattern[dnsmasq]",
                      "attributes": [
                        {
                          "line": 454,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dnsmasq.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 455,
                      "promiser": "pattern[dund]",
                      "attributes": [
                        {
                          "line": 455,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dund.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 456,
                      "promiser": "pattern[gpm]",
                      "attributes": [
                        {
                          "line": 456,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*gpm.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 457,
                      "promiser": "pattern[haldaemon]",
                      "attributes": [
                        {
                          "line": 457,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hald.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 458,
                      "promiser": "pattern[hidd]",
                      "attributes": [
                        {
                          "line": 458,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hidd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 459,
                      "promiser": "pattern[irda]",
                      "attributes": [
                        {
                          "line": 459,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*irattach.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 460,
                      "promiser": "pattern[iscsid]",
                      "attributes": [
                        {
                          "line": 460,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*iscsid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 461,
                      "promiser": "pattern[isdn]",
                      "attributes": [
                        {
                          "line": 461,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*isdnlog.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 462,
                      "promiser": "pattern[lvm2-monitor]",
                      "attributes": [
                        {
                          "line": 462,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*vgchange.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 463,
                      "promiser": "pattern[mcstrans]",
                      "attributes": [
                        {
                          "line": 463,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mcstransd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 464,
                      "promiser": "pattern[mdmonitor]",
                      "attributes": [
                        {
                          "line": 464,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mdadm.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 465,
                      "promiser": "pattern[mdmpd]",
                      "attributes": [
                        {
                          "line": 465,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mdmpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 466,
                      "promiser": "pattern[messagebus]",
                      "attributes": [
                        {
                          "line": 466,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dbus-daemon.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 467,
                      "promiser": "pattern[microcode_ctl]",
                      "attributes": [
                        {
                          "line": 467,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*microcode_ctl.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 468,
                      "promiser": "pattern[multipathd]",
                      "attributes": [
                        {
                          "line": 468,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*multipathd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 469,
                      "promiser": "pattern[netplugd]",
                      "attributes": [
                        {
                          "line": 469,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*netplugd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 470,
                      "promiser": "pattern[NetworkManager]",
                      "attributes": [
                        {
                          "line": 470,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*NetworkManager.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 471,
                      "promiser": "pattern[nfs]",
                      "attributes": [
                        {
                          "line": 471,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nfsd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 472,
                      "promiser": "pattern[nfslock]",
                      "attributes": [
                        {
                          "line": 472,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.statd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 473,
                      "promiser": "pattern[nscd]",
                      "attributes": [
                        {
                          "line": 473,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nscd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 474,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 474,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 475,
                      "promiser": "pattern[oddjobd]",
                      "attributes": [
                        {
                          "line": 475,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*oddjobd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 476,
                      "promiser": "pattern[pand]",
                      "attributes": [
                        {
                          "line": 476,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 477,
                      "promiser": "pattern[pcscd]",
                      "attributes": [
                        {
                          "line": 477,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pcscd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 478,
                      "promiser": "pattern[portmap]",
                      "attributes": [
                        {
                          "line": 478,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*portmap.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 479,
                      "promiser": "pattern[postgresql]",
                      "attributes": [
                        {
                          "line": 479,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postmaster.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 480,
                      "promiser": "pattern[rdisc]",
                      "attributes": [
                        {
                          "line": 480,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rdisc.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 481,
                      "promiser": "pattern[readahead_early]",
                      "attributes": [
                        {
                          "line": 481,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*readahead.*early.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 482,
                      "promiser": "pattern[readahead_later]",
                      "attributes": [
                        {
                          "line": 482,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*readahead.*later.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 483,
                      "promiser": "pattern[restorecond]",
                      "attributes": [
                        {
                          "line": 483,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*restorecond.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 484,
                      "promiser": "pattern[rpcgssd]",
                      "attributes": [
                        {
                          "line": 484,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.gssd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 485,
                      "promiser": "pattern[rpcidmapd]",
                      "attributes": [
                        {
                          "line": 485,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.idmapd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 486,
                      "promiser": "pattern[rpcsvcgssd]",
                      "attributes": [
                        {
                          "line": 486,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.svcgssd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 487,
                      "promiser": "pattern[saslauthd]",
                      "attributes": [
                        {
                          "line": 487,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*saslauthd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 488,
                      "promiser": "pattern[smartd]",
                      "attributes": [
                        {
                          "line": 488,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*smartd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 489,
                      "promiser": "pattern[svnserve]",
                      "attributes": [
                        {
                          "line": 489,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*svnserve.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 490,
                      "promiser": "pattern[syslog]",
                      "attributes": [
                        {
                          "line": 490,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*syslogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 491,
                      "promiser": "pattern[tcsd]",
                      "attributes": [
                        {
                          "line": 491,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tcsd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 492,
                      "promiser": "pattern[xfs]",
                      "attributes": [
                        {
                          "line": 492,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*xfs.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 493,
                      "promiser": "pattern[ypbind]",
                      "attributes": [
                        {
                          "line": 493,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ypbind.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 494,
                      "promiser": "pattern[yum-updatesd]",
                      "attributes": [
                        {
                          "line": 494,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*yum-updatesd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 495,
                      "promiser": "pattern[munin-node]",
                      "attributes": [
                        {
                          "line": 495,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*munin-node.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 497,
                      "promiser": "baseinit[bluetoothd]",
                      "attributes": [
                        {
                          "line": 497,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "bluetooth"
                          }
                        }
                      ]
                    },
                    {
                      "line": 498,
                      "promiser": "pattern[bluetoothd]",
                      "attributes": [
                        {
                          "line": 498,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hcid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 500,
                      "promiser": "baseinit[mysql]",
                      "attributes": [
                        {
                          "line": 500,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "mysqld"
                          }
                        }
                      ]
                    },
                    {
                      "line": 501,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 501,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 503,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 503,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "httpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 504,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 504,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*httpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 506,
                      "promiser": "baseinit[ssh]",
                      "attributes": [
                        {
                          "line": 506,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sshd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 508,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 508,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 510,
                      "promiser": "init[rhnsd]",
                      "attributes": [
                        {
                          "line": 510,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sysvservice"
                          }
                        }
                      ]
                    },
                    {
                      "line": 511,
                      "promiser": "pattern[rhnsd]",
                      "attributes": [
                        {
                          "line": 511,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "rhnsd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 513,
                      "promiser": "baseinit[snmpd]",
                      "attributes": [
                        {
                          "line": 513,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "snmpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 514,
                      "promiser": "pattern[snmpd]",
                      "attributes": [
                        {
                          "line": 514,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/snmpd"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "debian|ubuntu",
                  "promises": [
                    {
                      "line": 518,
                      "promiser": "pattern[atd]",
                      "attributes": [
                        {
                          "line": 518,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "atd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 519,
                      "promiser": "pattern[bluetoothd]",
                      "attributes": [
                        {
                          "line": 519,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*bluetoothd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 520,
                      "promiser": "pattern[bootlogd]",
                      "attributes": [
                        {
                          "line": 520,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*bootlogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 521,
                      "promiser": "pattern[crond]",
                      "attributes": [
                        {
                          "line": 521,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cron.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 522,
                      "promiser": "pattern[kerneloops]",
                      "attributes": [
                        {
                          "line": 522,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*kerneloops.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 523,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 523,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 524,
                      "promiser": "pattern[NetworkManager]",
                      "attributes": [
                        {
                          "line": 524,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*NetworkManager.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 525,
                      "promiser": "pattern[ondemand]",
                      "attributes": [
                        {
                          "line": 525,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ondemand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 526,
                      "promiser": "pattern[plymouth]",
                      "attributes": [
                        {
                          "line": 526,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*plymouthd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 527,
                      "promiser": "pattern[saned]",
                      "attributes": [
                        {
                          "line": 527,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*saned.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 528,
                      "promiser": "pattern[udev]",
                      "attributes": [
                        {
                          "line": 528,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*udev.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 529,
                      "promiser": "pattern[udevmonitor]",
                      "attributes": [
                        {
                          "line": 529,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*udevadm.*monitor.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 530,
                      "promiser": "pattern[snmpd]",
                      "attributes": [
                        {
                          "line": 530,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/snmpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 531,
                      "promiser": "pattern[pgbouncer]",
                      "attributes": [
                        {
                          "line": 531,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pgbouncer.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 532,
                      "promiser": "pattern[supervisor]",
                      "attributes": [
                        {
                          "line": 532,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*supervisord.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 533,
                      "promiser": "pattern[munin-node]",
                      "attributes": [
                        {
                          "line": 533,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*munin-node.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 534,
                      "promiser": "pattern[carbon-cache]",
                      "attributes": [
                        {
                          "line": 534,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*carbon-cache.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 535,
                      "promiser": "pattern[cassandra]",
                      "attributes": [
                        {
                          "line": 535,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*jsvc\\.exec.*apache-cassandra\\.jar.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 537,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 537,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 539,
                      "promiser": "baseinit[ntpd]",
                      "attributes": [
                        {
                          "line": 539,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "ntp"
                          }
                        }
                      ]
                    },
                    {
                      "line": 540,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 540,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 542,
                      "promiser": "baseinit[postgresql84]",
                      "attributes": [
                        {
                          "line": 542,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "postgresql-8.4"
                          }
                        }
                      ]
                    },
                    {
                      "line": 543,
                      "promiser": "pattern[postgresql84]",
                      "attributes": [
                        {
                          "line": 543,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postgresql.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 545,
                      "promiser": "baseinit[postgresql91]",
                      "attributes": [
                        {
                          "line": 545,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "postgresql-9.1"
                          }
                        }
                      ]
                    },
                    {
                      "line": 546,
                      "promiser": "pattern[postgresql91]",
                      "attributes": [
                        {
                          "line": 546,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postgresql.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 548,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 548,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "apache2"
                          }
                        }
                      ]
                    },
                    {
                      "line": 549,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 549,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*apache2.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 551,
                      "promiser": "baseinit[nrpe]",
                      "attributes": [
                        {
                          "line": 551,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "nagios-nrpe-server"
                          }
                        }
                      ]
                    },
                    {
                      "line": 552,
                      "promiser": "pattern[nrpe]",
                      "attributes": [
                        {
                          "line": 552,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nrpe.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 554,
                      "promiser": "baseinit[omsa-dataeng]",
                      "attributes": [
                        {
                          "line": 554,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "dataeng"
                          }
                        }
                      ]
                    },
                    {
                      "line": 555,
                      "promiser": "pattern[omsa-dataeng]",
                      "attributes": [
                        {
                          "line": 555,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dsm_sa_datamgr.*"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "freebsd",
                  "promises": [
                    {
                      "line": 559,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 559,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 561,
                      "promiser": "baseinit[ssh]",
                      "attributes": [
                        {
                          "line": 561,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sshd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 562,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 562,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/sshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 564,
                      "promiser": "baseinit[syslog]",
                      "attributes": [
                        {
                          "line": 564,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "syslogd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 565,
                      "promiser": "pattern[syslog]",
                      "attributes": [
                        {
                          "line": 565,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/syslogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 567,
                      "promiser": "baseinit[crond]",
                      "attributes": [
                        {
                          "line": 567,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "cron"
                          }
                        }
                      ]
                    },
                    {
                      "line": 568,
                      "promiser": "pattern[crond]",
                      "attributes": [
                        {
                          "line": 568,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/cron.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 570,
                      "promiser": "baseinit[snmpd]",
                      "attributes": [
                        {
                          "line": 570,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "bsnmpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 571,
                      "promiser": "pattern[snmpd]",
                      "attributes": [
                        {
                          "line": 571,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/bsnmpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 573,
                      "promiser": "pattern[newsyslog]",
                      "attributes": [
                        {
                          "line": 573,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/newsyslog.*"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 575,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 577,
                      "promiser": "$(all_states)",
                      "attributes": [
                        {
                          "line": 577,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(all_states)"
                              },
                              {
                                "type": "string",
                                "value": "$(state)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 578,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Set a class named after the desired state"
                          }
                        }
                      ]
                    },
                    {
                      "line": 580,
                      "promiser": "$(inits)_set",
                      "attributes": [
                        {
                          "line": 580,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(init[$(service)])"
                              },
                              {
                                "type": "string",
                                "value": "$(inits)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 581,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Check if init system is specified"
                          }
                        }
                      ]
                    },
                    {
                      "line": 582,
                      "promiser": "no_inits_set",
                      "attributes": [
                        {
                          "line": 582,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "isvariable",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "init[$(service)]"
                              }
                            ]
                          }
                        },
                        {
                          "line": 583,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Check if no init system is specified"
                          }
                        }
                      ]
                    },
                    {
                      "line": 586,
                      "promiser": "using_$(init_system)",
                      "attributes": [
                        {
                          "line": 586,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "any"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 710,
              "name": "commands",
              "contexts": [
                {
                  "name": "using_chkconfig",
                  "promises": [
                    {
                      "line": 590,
                      "promiser": "$(paths.chkconfig) $(service) $(chkconfig_mode)",
                      "attributes": [
                        {
                          "line": 591,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 712,
                      "promiser": "$(startcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 713,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to start the $(service) service"
                          }
                        },
                        {
                          "line": 714,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 716,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 718,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 719,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 720,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 724,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 726,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 727,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 728,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 732,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 734,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 735,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 736,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 740,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 742,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 743,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 744,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 748,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "restart",
                  "promises": [
                    {
                      "line": 751,
                      "promiser": "$(restartcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 752,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 753,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 754,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 757,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 758,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 759,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 762,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 764,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 765,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 766,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 769,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 771,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 772,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 773,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 776,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 778,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 779,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 780,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 783,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "reload",
                  "promises": [
                    {
                      "line": 786,
                      "promiser": "$(reloadcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 787,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 788,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 789,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 791,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 792,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 793,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 796,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 798,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 799,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 800,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 803,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 805,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 806,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 807,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 810,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 812,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 813,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 814,
                          "lval": "classes",
                          "rval": {
                            "type": "symbol",
                            "value": "kept_successful_command"
                          }
                        },
                        {
                          "line": 817,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 593,
              "name": "processes",
              "contexts": [
                {
                  "name": "start",
                  "promises": [
                    {
                      "line": 597,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 599,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service appears in the process table"
                          }
                        },
                        {
                          "line": 600,
                          "lval": "restart_class",
                          "rval": {
                            "type": "string",
                            "value": "start_$(service)"
                          }
                        },
                        {
                          "line": 601,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 603,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 605,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service appears in the process table"
                          }
                        },
                        {
                          "line": 606,
                          "lval": "restart_class",
                          "rval": {
                            "type": "string",
                            "value": "start_$(service)"
                          }
                        },
                        {
                          "line": 607,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stop|disable",
                  "promises": [
                    {
                      "line": 611,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 613,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 614,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(stopcommand[$(service)])"
                          }
                        },
                        {
                          "line": 615,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 617,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 619,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 621,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 622,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(stopcommand[$(service)])"
                          }
                        },
                        {
                          "line": 623,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 625,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 627,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 629,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 630,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 631,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 635,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 637,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 639,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 640,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 641,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 645,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 648,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 650,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 651,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 652,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 656,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 658,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 660,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 661,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 662,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 666,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 669,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 671,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 672,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(default[init])])"
                          }
                        },
                        {
                          "line": 673,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 677,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 679,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 681,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 682,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(inits)])"
                          }
                        },
                        {
                          "line": 683,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 687,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 690,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 692,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 693,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(default[init])])"
                          }
                        },
                        {
                          "line": 694,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 698,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 700,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 702,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 703,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(inits)])"
                          }
                        },
                        {
                          "line": 704,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 708,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 819,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode",
                  "promises": [
                    {
                      "line": 821,
                      "promiser": "$(this.bundle): Using init system $(inits)",
                      "attributes": [
                        {
                          "line": 822,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 824,
                      "promiser": "$(this.bundle): No init system is set, using $(default[init])",
                      "attributes": [
                        {
                          "line": 825,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "no_inits_set"
                          }
                        }
                      ]
                    },
                    {
                      "line": 827,
                      "promiser": "$(this.bundle): The service $(service) needs to be started",
                      "attributes": [
                        {
                          "line": 828,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 830,
                      "promiser": "$(this.bundle): The service pattern is provided: $(pattern[$(service)])",
                      "attributes": [
                        {
                          "line": 831,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 833,
                      "promiser": "$(this.bundle): The default service pattern was used: $(default[pattern])",
                      "attributes": [
                        {
                          "line": 834,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 836,
                      "promiser": "$(this.bundle): The stopcommand is provided: $(stopcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 837,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 839,
                      "promiser": "$(this.bundle): The stopcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 840,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 842,
                      "promiser": "$(this.bundle): The startcommand is provided: $(startcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 843,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 845,
                      "promiser": "$(this.bundle): The startcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 846,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 848,
                      "promiser": "$(this.bundle): The restartcommand is provided: $(restartcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 849,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 851,
                      "promiser": "$(this.bundle): The restartcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 852,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 854,
                      "promiser": "$(this.bundle): The reloadcommand is provided: $(reloadcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 855,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 857,
                      "promiser": "$(this.bundle): The reloadcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 858,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 860,
                      "promiser": "$(this.bundle): The baseinit is provided: $(baseinit[$(service)])",
                      "attributes": [
                        {
                          "line": 861,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 863,
                      "promiser": "$(this.bundle): The baseinit is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 864,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 57,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 60,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(services_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 67,
          "namespace": "default",
          "name": "bootstart",
          "bodyType": "service_method",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 72,
                  "lval": "service_autostart_policy",
                  "rval": {
                    "type": "string",
                    "value": "boot_time"
                  }
                },
                {
                  "line": 73,
                  "lval": "service_dependence_chain",
                  "rval": {
                    "type": "string",
                    "value": "start_parent_services"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 75,
                  "lval": "service_type",
                  "rval": {
                    "type": "string",
                    "value": "windows"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 80,
          "namespace": "default",
          "name": "force_deps",
          "bodyType": "service_method",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 88,
                  "lval": "service_dependence_chain",
                  "rval": {
                    "type": "string",
                    "value": "all_related"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 90,
                  "lval": "service_type",
                  "rval": {
                    "type": "string",
                    "value": "windows"
                  }
                }
              ]
            }
          ]
        }
      ]
    }
