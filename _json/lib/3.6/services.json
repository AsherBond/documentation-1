{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 73,
          "namespace": "default",
          "name": "standard_services",
          "bundleType": "agent",
          "arguments": [
            "service",
            "state"
          ],
          "promiseTypes": [
            {
              "line": 186,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 187,
                      "promiser": "all_states",
                      "attributes": [
                        {
                          "line": 187,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "start"
                              },
                              {
                                "type": "string",
                                "value": "restart"
                              },
                              {
                                "type": "string",
                                "value": "reload"
                              },
                              {
                                "type": "string",
                                "value": "stop"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 189,
                      "promiser": "inits",
                      "attributes": [
                        {
                          "line": 189,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "sysvinitd"
                              },
                              {
                                "type": "string",
                                "value": "sysvservice"
                              },
                              {
                                "type": "string",
                                "value": "systemd"
                              }
                            ]
                          }
                        },
                        {
                          "line": 190,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Currently handled init systems"
                          }
                        }
                      ]
                    },
                    {
                      "line": 192,
                      "promiser": "default[prefix][sysvservice]",
                      "attributes": [
                        {
                          "line": 192,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(paths.path[service]) "
                          }
                        },
                        {
                          "line": 193,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command for sysv service interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 195,
                      "promiser": "default[prefix][systemd]",
                      "attributes": [
                        {
                          "line": 195,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/bin/systemctl "
                          }
                        },
                        {
                          "line": 196,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command for systemd interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 198,
                      "promiser": "default[prefix][sysvinitd]",
                      "attributes": [
                        {
                          "line": 201,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "ifelse",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "openbsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "freebsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "netbsd"
                              },
                              {
                                "type": "string",
                                "value": "/etc/rc.d/"
                              },
                              {
                                "type": "string",
                                "value": "/etc/init.d/"
                              }
                            ]
                          }
                        },
                        {
                          "line": 202,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Command prefix for sysv init script interactions"
                          }
                        }
                      ]
                    },
                    {
                      "line": 204,
                      "promiser": "default[cmd][$(inits)]",
                      "attributes": [
                        {
                          "line": 204,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(service) $(state)"
                          }
                        },
                        {
                          "line": 205,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Default command to control the service"
                          }
                        }
                      ]
                    },
                    {
                      "line": 207,
                      "promiser": "default[pattern]",
                      "attributes": [
                        {
                          "line": 207,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "\\b$(service)\\b"
                          }
                        },
                        {
                          "line": 208,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Set default pattern for proc matching"
                          }
                        }
                      ]
                    },
                    {
                      "line": 210,
                      "promiser": "default[init]",
                      "attributes": [
                        {
                          "line": 210,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sysvinitd"
                          }
                        },
                        {
                          "line": 211,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Set the default init system used if one isn\\'t defined"
                          }
                        }
                      ]
                    },
                    {
                      "line": 213,
                      "promiser": "stakeholders[cfengine3]",
                      "attributes": [
                        {
                          "line": 213,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "cfengine_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 214,
                      "promiser": "stakeholders[acpid]",
                      "attributes": [
                        {
                          "line": 214,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "cpu"
                              },
                              {
                                "type": "string",
                                "value": "cpu0"
                              },
                              {
                                "type": "string",
                                "value": "cpu1"
                              },
                              {
                                "type": "string",
                                "value": "cpu2"
                              },
                              {
                                "type": "string",
                                "value": "cpu3"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 215,
                      "promiser": "stakeholders[mongod]",
                      "attributes": [
                        {
                          "line": 215,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "mongo_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 216,
                      "promiser": "stakeholders[postfix]",
                      "attributes": [
                        {
                          "line": 216,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "smtp_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 217,
                      "promiser": "stakeholders[sendmail]",
                      "attributes": [
                        {
                          "line": 217,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "smtp_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 218,
                      "promiser": "stakeholders[www]",
                      "attributes": [
                        {
                          "line": 218,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_in"
                              },
                              {
                                "type": "string",
                                "value": "wwws_in"
                              },
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 219,
                      "promiser": "stakeholders[ssh]",
                      "attributes": [
                        {
                          "line": 219,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "ssh_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 220,
                      "promiser": "stakeholders[mysql]",
                      "attributes": [
                        {
                          "line": 220,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "mysql_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 221,
                      "promiser": "stakeholders[nfs]",
                      "attributes": [
                        {
                          "line": 221,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "nfsd_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 222,
                      "promiser": "stakeholders[syslog]",
                      "attributes": [
                        {
                          "line": 222,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "syslog"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 223,
                      "promiser": "stakeholders[rsyslog]",
                      "attributes": [
                        {
                          "line": 223,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "syslog"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 224,
                      "promiser": "stakeholders[tomcat5]",
                      "attributes": [
                        {
                          "line": 224,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 225,
                      "promiser": "stakeholders[tomcat6]",
                      "attributes": [
                        {
                          "line": 225,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "www_alt_in"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "linux",
                  "promises": [
                    {
                      "line": 229,
                      "promiser": "pattern[acpid]",
                      "attributes": [
                        {
                          "line": 229,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*acpid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 230,
                      "promiser": "pattern[cfengine3]",
                      "attributes": [
                        {
                          "line": 230,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cf-execd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 231,
                      "promiser": "pattern[fancontrol]",
                      "attributes": [
                        {
                          "line": 231,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*fancontrol.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 232,
                      "promiser": "pattern[hddtemp]",
                      "attributes": [
                        {
                          "line": 232,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hddtemp.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 233,
                      "promiser": "pattern[irqbalance]",
                      "attributes": [
                        {
                          "line": 233,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*irqbalance.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 234,
                      "promiser": "pattern[lm-sensor]",
                      "attributes": [
                        {
                          "line": 234,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*psensor.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 235,
                      "promiser": "pattern[mongod]",
                      "attributes": [
                        {
                          "line": 235,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mongod.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 236,
                      "promiser": "pattern[openvpn]",
                      "attributes": [
                        {
                          "line": 236,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*openvpn.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 237,
                      "promiser": "pattern[postfix]",
                      "attributes": [
                        {
                          "line": 237,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postfix.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 238,
                      "promiser": "pattern[rsync]",
                      "attributes": [
                        {
                          "line": 238,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rsync.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 239,
                      "promiser": "pattern[rsyslog]",
                      "attributes": [
                        {
                          "line": 239,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rsyslogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 240,
                      "promiser": "pattern[sendmail]",
                      "attributes": [
                        {
                          "line": 240,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*sendmail.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 241,
                      "promiser": "pattern[tomcat5]",
                      "attributes": [
                        {
                          "line": 241,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tomcat5.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 242,
                      "promiser": "pattern[tomcat6]",
                      "attributes": [
                        {
                          "line": 242,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tomcat6.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 243,
                      "promiser": "pattern[varnish]",
                      "attributes": [
                        {
                          "line": 243,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*varnish.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 244,
                      "promiser": "pattern[wpa_supplicant]",
                      "attributes": [
                        {
                          "line": 244,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*wpa_supplicant.*"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "SuSE|suse",
                  "promises": [
                    {
                      "line": 248,
                      "promiser": "baseinit[mysql]",
                      "attributes": [
                        {
                          "line": 248,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "mysqld"
                          }
                        }
                      ]
                    },
                    {
                      "line": 249,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 249,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 251,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 251,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "apache2"
                          }
                        }
                      ]
                    },
                    {
                      "line": 252,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 252,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*apache2.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 254,
                      "promiser": "baseinit[ssh]",
                      "attributes": [
                        {
                          "line": 254,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sshd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 256,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 256,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 258,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 258,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "redhat",
                  "promises": [
                    {
                      "line": 262,
                      "promiser": "pattern[anacron]",
                      "attributes": [
                        {
                          "line": 262,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*anacron.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 263,
                      "promiser": "pattern[atd]",
                      "attributes": [
                        {
                          "line": 263,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*sbin/atd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 264,
                      "promiser": "pattern[auditd]",
                      "attributes": [
                        {
                          "line": 264,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*auditd$"
                          }
                        }
                      ]
                    },
                    {
                      "line": 265,
                      "promiser": "pattern[autofs]",
                      "attributes": [
                        {
                          "line": 265,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*automount.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 266,
                      "promiser": "pattern[capi]",
                      "attributes": [
                        {
                          "line": 266,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*capiinit.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 267,
                      "promiser": "pattern[conman]",
                      "attributes": [
                        {
                          "line": 267,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*conmand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 268,
                      "promiser": "pattern[cpuspeed]",
                      "attributes": [
                        {
                          "line": 268,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cpuspeed.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 269,
                      "promiser": "pattern[crond]",
                      "attributes": [
                        {
                          "line": 269,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*crond.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 270,
                      "promiser": "pattern[dc_client]",
                      "attributes": [
                        {
                          "line": 270,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dc_client.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 271,
                      "promiser": "pattern[dc_server]",
                      "attributes": [
                        {
                          "line": 271,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dc_server.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 272,
                      "promiser": "pattern[dnsmasq]",
                      "attributes": [
                        {
                          "line": 272,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dnsmasq.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 273,
                      "promiser": "pattern[dund]",
                      "attributes": [
                        {
                          "line": 273,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dund.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 274,
                      "promiser": "pattern[gpm]",
                      "attributes": [
                        {
                          "line": 274,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*gpm.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 275,
                      "promiser": "pattern[haldaemon]",
                      "attributes": [
                        {
                          "line": 275,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hald.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 276,
                      "promiser": "pattern[hidd]",
                      "attributes": [
                        {
                          "line": 276,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hidd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 277,
                      "promiser": "pattern[irda]",
                      "attributes": [
                        {
                          "line": 277,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*irattach.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 278,
                      "promiser": "pattern[iscsid]",
                      "attributes": [
                        {
                          "line": 278,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*iscsid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 279,
                      "promiser": "pattern[isdn]",
                      "attributes": [
                        {
                          "line": 279,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*isdnlog.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 280,
                      "promiser": "pattern[lvm2-monitor]",
                      "attributes": [
                        {
                          "line": 280,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*vgchange.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 281,
                      "promiser": "pattern[mcstrans]",
                      "attributes": [
                        {
                          "line": 281,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mcstransd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 282,
                      "promiser": "pattern[mdmonitor]",
                      "attributes": [
                        {
                          "line": 282,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mdadm.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 283,
                      "promiser": "pattern[mdmpd]",
                      "attributes": [
                        {
                          "line": 283,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mdmpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 284,
                      "promiser": "pattern[messagebus]",
                      "attributes": [
                        {
                          "line": 284,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dbus-daemon.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 285,
                      "promiser": "pattern[microcode_ctl]",
                      "attributes": [
                        {
                          "line": 285,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*microcode_ctl.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 286,
                      "promiser": "pattern[multipathd]",
                      "attributes": [
                        {
                          "line": 286,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*multipathd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 287,
                      "promiser": "pattern[netplugd]",
                      "attributes": [
                        {
                          "line": 287,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*netplugd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 288,
                      "promiser": "pattern[NetworkManager]",
                      "attributes": [
                        {
                          "line": 288,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*NetworkManager.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 289,
                      "promiser": "pattern[nfs]",
                      "attributes": [
                        {
                          "line": 289,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nfsd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 290,
                      "promiser": "pattern[nfslock]",
                      "attributes": [
                        {
                          "line": 290,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.statd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 291,
                      "promiser": "pattern[nscd]",
                      "attributes": [
                        {
                          "line": 291,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nscd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 292,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 292,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 293,
                      "promiser": "pattern[oddjobd]",
                      "attributes": [
                        {
                          "line": 293,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*oddjobd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 294,
                      "promiser": "pattern[pand]",
                      "attributes": [
                        {
                          "line": 294,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 295,
                      "promiser": "pattern[pcscd]",
                      "attributes": [
                        {
                          "line": 295,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pcscd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 296,
                      "promiser": "pattern[portmap]",
                      "attributes": [
                        {
                          "line": 296,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*portmap.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 297,
                      "promiser": "pattern[postgresql]",
                      "attributes": [
                        {
                          "line": 297,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postmaster.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 298,
                      "promiser": "pattern[rdisc]",
                      "attributes": [
                        {
                          "line": 298,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rdisc.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 299,
                      "promiser": "pattern[readahead_early]",
                      "attributes": [
                        {
                          "line": 299,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*readahead.*early.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 300,
                      "promiser": "pattern[readahead_later]",
                      "attributes": [
                        {
                          "line": 300,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*readahead.*later.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 301,
                      "promiser": "pattern[restorecond]",
                      "attributes": [
                        {
                          "line": 301,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*restorecond.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 302,
                      "promiser": "pattern[rpcgssd]",
                      "attributes": [
                        {
                          "line": 302,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.gssd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 303,
                      "promiser": "pattern[rpcidmapd]",
                      "attributes": [
                        {
                          "line": 303,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.idmapd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 304,
                      "promiser": "pattern[rpcsvcgssd]",
                      "attributes": [
                        {
                          "line": 304,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*rpc.svcgssd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 305,
                      "promiser": "pattern[saslauthd]",
                      "attributes": [
                        {
                          "line": 305,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*saslauthd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 306,
                      "promiser": "pattern[smartd]",
                      "attributes": [
                        {
                          "line": 306,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*smartd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 307,
                      "promiser": "pattern[svnserve]",
                      "attributes": [
                        {
                          "line": 307,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*svnserve.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 308,
                      "promiser": "pattern[syslog]",
                      "attributes": [
                        {
                          "line": 308,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*syslogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 309,
                      "promiser": "pattern[tcsd]",
                      "attributes": [
                        {
                          "line": 309,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*tcsd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 310,
                      "promiser": "pattern[xfs]",
                      "attributes": [
                        {
                          "line": 310,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*xfs.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 311,
                      "promiser": "pattern[ypbind]",
                      "attributes": [
                        {
                          "line": 311,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ypbind.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 312,
                      "promiser": "pattern[yum-updatesd]",
                      "attributes": [
                        {
                          "line": 312,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*yum-updatesd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 313,
                      "promiser": "pattern[munin-node]",
                      "attributes": [
                        {
                          "line": 313,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*munin-node.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 315,
                      "promiser": "baseinit[bluetoothd]",
                      "attributes": [
                        {
                          "line": 315,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "bluetooth"
                          }
                        }
                      ]
                    },
                    {
                      "line": 316,
                      "promiser": "pattern[bluetoothd]",
                      "attributes": [
                        {
                          "line": 316,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*hcid.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 318,
                      "promiser": "baseinit[mysql]",
                      "attributes": [
                        {
                          "line": 318,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "mysqld"
                          }
                        }
                      ]
                    },
                    {
                      "line": 319,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 319,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 321,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 321,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "httpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 322,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 322,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*httpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 324,
                      "promiser": "baseinit[ssh]",
                      "attributes": [
                        {
                          "line": 324,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sshd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 326,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 326,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 328,
                      "promiser": "init[rhnsd]",
                      "attributes": [
                        {
                          "line": 328,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "sysvservice"
                          }
                        }
                      ]
                    },
                    {
                      "line": 329,
                      "promiser": "pattern[rhnsd]",
                      "attributes": [
                        {
                          "line": 329,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "rhnsd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 331,
                      "promiser": "baseinit[snmpd]",
                      "attributes": [
                        {
                          "line": 331,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "snmpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 332,
                      "promiser": "pattern[snmpd]",
                      "attributes": [
                        {
                          "line": 332,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/snmpd"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "debian|ubuntu",
                  "promises": [
                    {
                      "line": 336,
                      "promiser": "pattern[atd]",
                      "attributes": [
                        {
                          "line": 336,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "atd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 337,
                      "promiser": "pattern[bluetoothd]",
                      "attributes": [
                        {
                          "line": 337,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*bluetoothd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 338,
                      "promiser": "pattern[bootlogd]",
                      "attributes": [
                        {
                          "line": 338,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*bootlogd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 339,
                      "promiser": "pattern[crond]",
                      "attributes": [
                        {
                          "line": 339,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*cron.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 340,
                      "promiser": "pattern[kerneloops]",
                      "attributes": [
                        {
                          "line": 340,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*kerneloops.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 341,
                      "promiser": "pattern[mysql]",
                      "attributes": [
                        {
                          "line": 341,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*mysqld.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 342,
                      "promiser": "pattern[NetworkManager]",
                      "attributes": [
                        {
                          "line": 342,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*NetworkManager.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 343,
                      "promiser": "pattern[ondemand]",
                      "attributes": [
                        {
                          "line": 343,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ondemand.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 344,
                      "promiser": "pattern[plymouth]",
                      "attributes": [
                        {
                          "line": 344,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*plymouthd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 345,
                      "promiser": "pattern[saned]",
                      "attributes": [
                        {
                          "line": 345,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*saned.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 346,
                      "promiser": "pattern[udev]",
                      "attributes": [
                        {
                          "line": 346,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*udev.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 347,
                      "promiser": "pattern[udevmonitor]",
                      "attributes": [
                        {
                          "line": 347,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*udevadm.*monitor.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 348,
                      "promiser": "pattern[snmpd]",
                      "attributes": [
                        {
                          "line": 348,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/usr/sbin/snmpd"
                          }
                        }
                      ]
                    },
                    {
                      "line": 349,
                      "promiser": "pattern[pgbouncer]",
                      "attributes": [
                        {
                          "line": 349,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*pgbouncer.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 350,
                      "promiser": "pattern[supervisor]",
                      "attributes": [
                        {
                          "line": 350,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*supervisord.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 351,
                      "promiser": "pattern[munin-node]",
                      "attributes": [
                        {
                          "line": 351,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*munin-node.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 352,
                      "promiser": "pattern[carbon-cache]",
                      "attributes": [
                        {
                          "line": 352,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*carbon-cache.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 353,
                      "promiser": "pattern[cassandra]",
                      "attributes": [
                        {
                          "line": 353,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*jsvc\\.exec.*apache-cassandra\\.jar.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 355,
                      "promiser": "pattern[ssh]",
                      "attributes": [
                        {
                          "line": 355,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*\\Ssshd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 357,
                      "promiser": "baseinit[ntpd]",
                      "attributes": [
                        {
                          "line": 357,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "ntp"
                          }
                        }
                      ]
                    },
                    {
                      "line": 358,
                      "promiser": "pattern[ntpd]",
                      "attributes": [
                        {
                          "line": 358,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*ntpd.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 360,
                      "promiser": "baseinit[postgresql84]",
                      "attributes": [
                        {
                          "line": 360,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "postgresql-8.4"
                          }
                        }
                      ]
                    },
                    {
                      "line": 361,
                      "promiser": "pattern[postgresql84]",
                      "attributes": [
                        {
                          "line": 361,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postgresql.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 363,
                      "promiser": "baseinit[postgresql91]",
                      "attributes": [
                        {
                          "line": 363,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "postgresql-9.1"
                          }
                        }
                      ]
                    },
                    {
                      "line": 364,
                      "promiser": "pattern[postgresql91]",
                      "attributes": [
                        {
                          "line": 364,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*postgresql.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 366,
                      "promiser": "baseinit[www]",
                      "attributes": [
                        {
                          "line": 366,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "apache2"
                          }
                        }
                      ]
                    },
                    {
                      "line": 367,
                      "promiser": "pattern[www]",
                      "attributes": [
                        {
                          "line": 367,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*apache2.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 369,
                      "promiser": "baseinit[nrpe]",
                      "attributes": [
                        {
                          "line": 369,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "nagios-nrpe-server"
                          }
                        }
                      ]
                    },
                    {
                      "line": 370,
                      "promiser": "pattern[nrpe]",
                      "attributes": [
                        {
                          "line": 370,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*nrpe.*"
                          }
                        }
                      ]
                    },
                    {
                      "line": 372,
                      "promiser": "baseinit[omsa-dataeng]",
                      "attributes": [
                        {
                          "line": 372,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "dataeng"
                          }
                        }
                      ]
                    },
                    {
                      "line": 373,
                      "promiser": "pattern[omsa-dataeng]",
                      "attributes": [
                        {
                          "line": 373,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": ".*dsm_sa_datamgr.*"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 375,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 377,
                      "promiser": "$(all_states)",
                      "attributes": [
                        {
                          "line": 377,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(all_states)"
                              },
                              {
                                "type": "string",
                                "value": "$(state)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 378,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Set a class named after the desired state"
                          }
                        }
                      ]
                    },
                    {
                      "line": 380,
                      "promiser": "$(inits)_set",
                      "attributes": [
                        {
                          "line": 380,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(init[$(service)])"
                              },
                              {
                                "type": "string",
                                "value": "$(inits)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 381,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Check if init system is specified"
                          }
                        }
                      ]
                    },
                    {
                      "line": 382,
                      "promiser": "no_inits_set",
                      "attributes": [
                        {
                          "line": 382,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "isvariable",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "init[$(service)]"
                              }
                            ]
                          }
                        },
                        {
                          "line": 383,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Check if no init system is specified"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 385,
              "name": "processes",
              "contexts": [
                {
                  "name": "start",
                  "promises": [
                    {
                      "line": 389,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 391,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service appears in the process table"
                          }
                        },
                        {
                          "line": 392,
                          "lval": "restart_class",
                          "rval": {
                            "type": "string",
                            "value": "start_$(service)"
                          }
                        },
                        {
                          "line": 393,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 395,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 397,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service appears in the process table"
                          }
                        },
                        {
                          "line": 398,
                          "lval": "restart_class",
                          "rval": {
                            "type": "string",
                            "value": "start_$(service)"
                          }
                        },
                        {
                          "line": 399,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "stop",
                  "promises": [
                    {
                      "line": 403,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 405,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 406,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(stopcommand[$(service)])"
                          }
                        },
                        {
                          "line": 407,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 409,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 411,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 413,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 414,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(stopcommand[$(service)])"
                          }
                        },
                        {
                          "line": 415,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 417,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 419,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 421,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 422,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 423,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 427,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 429,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 431,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 432,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 433,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 437,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 440,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 442,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 443,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 444,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 448,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 450,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 452,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 453,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)"
                          }
                        },
                        {
                          "line": 454,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 458,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 461,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 463,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 464,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(default[init])])"
                          }
                        },
                        {
                          "line": 465,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 469,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 471,
                      "promiser": "$(pattern[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 473,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 474,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(inits)])"
                          }
                        },
                        {
                          "line": 475,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 479,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 482,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 484,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 485,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(default[init])])"
                          }
                        },
                        {
                          "line": 486,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 490,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 492,
                      "promiser": "$(default[pattern])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 494,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Verify that the service does not appear in the process"
                          }
                        },
                        {
                          "line": 495,
                          "lval": "process_stop",
                          "rval": {
                            "type": "string",
                            "value": "$(default[cmd][$(inits)])"
                          }
                        },
                        {
                          "line": 496,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "term"
                              },
                              {
                                "type": "string",
                                "value": "kill"
                              }
                            ]
                          }
                        },
                        {
                          "line": 500,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "stopcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "pattern[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 502,
              "name": "commands",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 504,
                      "promiser": "$(startcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 505,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to start the $(service) service"
                          }
                        },
                        {
                          "line": 507,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 509,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 510,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 514,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 516,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 517,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 521,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 523,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 524,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 528,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 530,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 531,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to start the $(service) service"
                          }
                        },
                        {
                          "line": 535,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "startcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "restart",
                  "promises": [
                    {
                      "line": 538,
                      "promiser": "$(restartcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 539,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 540,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 543,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 544,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 547,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 549,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 550,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 553,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 555,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 556,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 559,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 561,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 562,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to restart the $(service) service"
                          }
                        },
                        {
                          "line": 565,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "restartcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "reload",
                  "promises": [
                    {
                      "line": 568,
                      "promiser": "$(reloadcommand[$(service)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 569,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 570,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 572,
                      "promiser": "$(default[prefix][$(default[init])])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 573,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 576,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 578,
                      "promiser": "$(default[prefix][$(inits)])$(baseinit[$(service)]) $(state)",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 579,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (baseinit init) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 582,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 584,
                      "promiser": "$(default[cmd][$(default[init])])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 585,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 588,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "no_inits_set"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 590,
                      "promiser": "$(default[cmd][$(inits)])",
                      "promisee": [
                        "@(stakeholders[$(service)])"
                      ],
                      "attributes": [
                        {
                          "line": 591,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Execute (default) command to reload the $(service) service"
                          }
                        },
                        {
                          "line": 594,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "reloadcommand[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "not",
                                "arguments": [
                                  {
                                    "type": "functionCall",
                                    "name": "isvariable",
                                    "arguments": [
                                      {
                                        "type": "string",
                                        "value": "baseinit[$(service)]"
                                      }
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 596,
              "name": "reports",
              "contexts": [
                {
                  "name": "inform_mode",
                  "promises": [
                    {
                      "line": 598,
                      "promiser": "$(this.bundle): Using init system $(inits)",
                      "attributes": [
                        {
                          "line": 599,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "$(inits)_set"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 601,
                      "promiser": "$(this.bundle): No init system is set, using $(default[init])",
                      "attributes": [
                        {
                          "line": 602,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "no_inits_set"
                          }
                        }
                      ]
                    },
                    {
                      "line": 604,
                      "promiser": "$(this.bundle): The service $(service) needs to be started",
                      "attributes": [
                        {
                          "line": 605,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "canonify",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "start_$(service)"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 607,
                      "promiser": "$(this.bundle): The service pattern is provided: $(pattern[$(service)])",
                      "attributes": [
                        {
                          "line": 608,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 610,
                      "promiser": "$(this.bundle): The default service pattern was used: $(default[pattern])",
                      "attributes": [
                        {
                          "line": 611,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "pattern[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 613,
                      "promiser": "$(this.bundle): The stopcommand is provided: $(stopcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 614,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 616,
                      "promiser": "$(this.bundle): The stopcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 617,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "stopcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 619,
                      "promiser": "$(this.bundle): The startcommand is provided: $(startcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 620,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 622,
                      "promiser": "$(this.bundle): The startcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 623,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "startcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 625,
                      "promiser": "$(this.bundle): The restartcommand is provided: $(restartcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 626,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 628,
                      "promiser": "$(this.bundle): The restartcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 629,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "restartcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 631,
                      "promiser": "$(this.bundle): The reloadcommand is provided: $(reloadcommand[$(service)])",
                      "attributes": [
                        {
                          "line": 632,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 634,
                      "promiser": "$(this.bundle): The reloadcommand is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 635,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "reloadcommand[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 637,
                      "promiser": "$(this.bundle): The baseinit is provided: $(baseinit[$(service)])",
                      "attributes": [
                        {
                          "line": 638,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "and",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 640,
                      "promiser": "$(this.bundle): The baseinit is NOT provided, using default",
                      "attributes": [
                        {
                          "line": 641,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "not",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "isvariable",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "baseinit[$(service)]"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 54,
          "namespace": "default",
          "name": "bootstart",
          "bodyType": "service_method",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 56,
                  "lval": "service_autostart_policy",
                  "rval": {
                    "type": "string",
                    "value": "boot_time"
                  }
                },
                {
                  "line": 57,
                  "lval": "service_dependence_chain",
                  "rval": {
                    "type": "string",
                    "value": "start_parent_services"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 59,
                  "lval": "service_type",
                  "rval": {
                    "type": "string",
                    "value": "windows"
                  }
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/services.cf",
          "line": 64,
          "namespace": "default",
          "name": "force_deps",
          "bodyType": "service_method",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 66,
                  "lval": "service_dependence_chain",
                  "rval": {
                    "type": "string",
                    "value": "all_related"
                  }
                }
              ]
            },
            {
              "name": "windows",
              "attributes": [
                {
                  "line": 68,
                  "lval": "service_type",
                  "rval": {
                    "type": "string",
                    "value": "windows"
                  }
                }
              ]
            }
          ]
        }
      ]
    }