{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 50,
          "namespace": "default",
          "name": "bundles_common",
          "bundleType": "common",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 53,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 54,
                      "promiser": "inputs",
                      "attributes": [
                        {
                          "line": 54,
                          "lval": "slist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(this.promise_dirname)/files.cf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 67,
          "namespace": "default",
          "name": "cronjob",
          "bundleType": "agent",
          "arguments": [
            "commands",
            "user",
            "hours",
            "mins"
          ],
          "promiseTypes": [
            {
              "line": 84,
              "name": "vars",
              "contexts": [
                {
                  "name": "SuSE",
                  "promises": [
                    {
                      "line": 86,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 86,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron/tabs"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "redhat|fedora",
                  "promises": [
                    {
                      "line": 88,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 88,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "freebsd",
                  "promises": [
                    {
                      "line": 90,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 90,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/cron/tabs"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!(SuSE|redhat|fedora|freebsd)",
                  "promises": [
                    {
                      "line": 92,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 92,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron/crontabs"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 94,
              "name": "files",
              "contexts": [
                {
                  "name": "!windows",
                  "promises": [
                    {
                      "line": 97,
                      "promiser": "$(crontab)/$(user)",
                      "attributes": [
                        {
                          "line": 99,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "A user\\'s regular batch jobs are added to this file"
                          }
                        },
                        {
                          "line": 100,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 101,
                          "lval": "edit_line",
                          "rval": {
                            "type": "functionCall",
                            "name": "append_if_no_line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(mins) $(hours) * * * $(commands)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 102,
                          "lval": "perms",
                          "rval": {
                            "type": "functionCall",
                            "name": "mo",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "600"
                              },
                              {
                                "type": "string",
                                "value": "$(user)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 103,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_repaired",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "changed_crontab"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 105,
              "name": "processes",
              "contexts": [
                {
                  "name": "changed_crontab",
                  "promises": [
                    {
                      "line": 108,
                      "promiser": "cron",
                      "attributes": [
                        {
                          "line": 109,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Most crons need to be huped after file changes"
                          }
                        },
                        {
                          "line": 110,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "hup"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 114,
          "namespace": "default",
          "name": "rm_rf",
          "bundleType": "agent",
          "arguments": [
            "name"
          ],
          "promiseTypes": [
            {
              "line": 128,
              "name": "methods",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 129,
                      "promiser": "rm",
                      "attributes": [
                        {
                          "line": 129,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "rm_rf_depth",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(name)"
                              },
                              {
                                "type": "string",
                                "value": "inf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 133,
          "namespace": "default",
          "name": "rm_rf_depth",
          "bundleType": "agent",
          "arguments": [
            "name",
            "depth"
          ],
          "promiseTypes": [
            {
              "line": 148,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 149,
                      "promiser": "isdir",
                      "attributes": [
                        {
                          "line": 149,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isdir",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(name)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 150,
              "name": "files",
              "contexts": [
                {
                  "name": "isdir",
                  "promises": [
                    {
                      "line": 152,
                      "promiser": "$(name)",
                      "attributes": [
                        {
                          "line": 153,
                          "lval": "file_select",
                          "rval": {
                            "type": "symbol",
                            "value": "all"
                          }
                        },
                        {
                          "line": 154,
                          "lval": "depth_search",
                          "rval": {
                            "type": "functionCall",
                            "name": "recurse_with_base",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(depth)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 155,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!isdir",
                  "promises": [
                    {
                      "line": 158,
                      "promiser": "$(name)",
                      "attributes": [
                        {
                          "line": 158,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 161,
          "namespace": "default",
          "name": "fileinfo",
          "bundleType": "agent",
          "arguments": [
            "f"
          ],
          "promiseTypes": [
            {
              "line": 213,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 214,
                      "promiser": "fields",
                      "attributes": [
                        {
                          "line": 214,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "splitstring",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "size,gid,uid,ino,nlink,ctime,atime,mtime,mode,modeoct,permstr,permoct,type,devno,dev_minor,dev_major,basename,dirname,linktarget,linktarget_shallow"
                              },
                              {
                                "type": "string",
                                "value": ","
                              },
                              {
                                "type": "string",
                                "value": "999"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 216,
                      "promiser": "stat[$(f)][$(fields)]",
                      "attributes": [
                        {
                          "line": 216,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "filestat",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(f)"
                              },
                              {
                                "type": "string",
                                "value": "$(fields)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 218,
              "name": "reports",
              "contexts": [
                {
                  "name": "verbose_mode",
                  "promises": [
                    {
                      "line": 220,
                      "promiser": "$(this.bundle): file $(f) has $(fields) = $(stat[$(f)][$(fields)])",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 223,
          "namespace": "default",
          "name": "logrotate",
          "bundleType": "agent",
          "arguments": [
            "log_files",
            "max_size",
            "rotate_levels"
          ],
          "promiseTypes": [
            {
              "line": 247,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 248,
                      "promiser": "$(log_files)",
                      "attributes": [
                        {
                          "line": 249,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Rotate file if above specified size"
                          }
                        },
                        {
                          "line": 250,
                          "lval": "rename",
                          "rval": {
                            "type": "functionCall",
                            "name": "rotate",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(rotate_levels)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 251,
                          "lval": "file_select",
                          "rval": {
                            "type": "functionCall",
                            "name": "bigger_than",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(max_size)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 254,
          "namespace": "default",
          "name": "probabilistic_usebundle",
          "bundleType": "agent",
          "arguments": [
            "probability",
            "bundlename"
          ],
          "promiseTypes": [
            {
              "line": 276,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 277,
                      "promiser": "fifty_fifty",
                      "attributes": [
                        {
                          "line": 278,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "strcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(probability)"
                              },
                              {
                                "type": "string",
                                "value": "50"
                              }
                            ]
                          }
                        },
                        {
                          "line": 280,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "We have to special case 50 because of the way dist classes\n                  work you would always get 50 defined"
                          }
                        }
                      ]
                    },
                    {
                      "line": 281,
                      "promiser": "not_fifty_fifty",
                      "attributes": [
                        {
                          "line": 281,
                          "lval": "expression",
                          "rval": {
                            "type": "string",
                            "value": "!fifty_fifty"
                          }
                        }
                      ]
                    },
                    {
                      "line": 282,
                      "promiser": "have_remainder",
                      "attributes": [
                        {
                          "line": 282,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isvariable",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "remainder"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "fifty_fifty.have_remainder",
                  "promises": [
                    {
                      "line": 285,
                      "promiser": "activate_bundle",
                      "attributes": [
                        {
                          "line": 286,
                          "lval": "dist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(probability)000"
                              },
                              {
                                "type": "string",
                                "value": "$(remainder)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "not_fifty_fifty.have_remainder",
                  "promises": [
                    {
                      "line": 289,
                      "promiser": "activate_bundle",
                      "attributes": [
                        {
                          "line": 290,
                          "lval": "dist",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "$(probability)"
                              },
                              {
                                "type": "string",
                                "value": "$(remainder)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 292,
              "name": "vars",
              "contexts": [
                {
                  "name": "fifty_fifty",
                  "promises": [
                    {
                      "line": 294,
                      "promiser": "remainder",
                      "attributes": [
                        {
                          "line": 295,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "format",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "%d"
                              },
                              {
                                "type": "functionCall",
                                "name": "eval",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "((100 - $(probability)) * 1000) +1"
                                  },
                                  {
                                    "type": "string",
                                    "value": "math"
                                  },
                                  {
                                    "type": "string",
                                    "value": "infix"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "not_fifty_fifty",
                  "promises": [
                    {
                      "line": 298,
                      "promiser": "remainder",
                      "attributes": [
                        {
                          "line": 299,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "format",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "%d"
                              },
                              {
                                "type": "functionCall",
                                "name": "eval",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "100 - $(probability)"
                                  },
                                  {
                                    "type": "string",
                                    "value": "math"
                                  },
                                  {
                                    "type": "string",
                                    "value": "infix"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 301,
              "name": "methods",
              "contexts": [
                {
                  "name": "fifty_fifty",
                  "promises": [
                    {
                      "line": 303,
                      "promiser": "Activate bundle probabilistically",
                      "attributes": [
                        {
                          "line": 304,
                          "lval": "handle",
                          "rval": {
                            "type": "string",
                            "value": "probabilistic_usebundle_methods_special_case_fifty_fifty_activate_bundle"
                          }
                        },
                        {
                          "line": 305,
                          "lval": "usebundle",
                          "rval": {
                            "type": "string",
                            "value": "$(bundlename)"
                          }
                        },
                        {
                          "line": 306,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "activate_bundle_$(probability)000"
                          }
                        },
                        {
                          "line": 307,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Activate $(bundlename) $(probability)%ish of the time"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "not_fifty_fifty",
                  "promises": [
                    {
                      "line": 310,
                      "promiser": "Activate bundle probabilistically",
                      "attributes": [
                        {
                          "line": 311,
                          "lval": "handle",
                          "rval": {
                            "type": "string",
                            "value": "probabilistic_usebundle_methods_activate_bundle"
                          }
                        },
                        {
                          "line": 312,
                          "lval": "usebundle",
                          "rval": {
                            "type": "string",
                            "value": "$(bundlename)"
                          }
                        },
                        {
                          "line": 313,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "activate_bundle_$(probability)"
                          }
                        },
                        {
                          "line": 314,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Activate $(bundlename) $(probability)% of the time"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 317,
              "name": "reports",
              "contexts": [
                {
                  "name": "DEBUG.fifty_fifty",
                  "promises": [
                    {
                      "line": 319,
                      "promiser": "$(this.bundle) Special case for 50/50",
                      "attributes": []
                    },
                    {
                      "line": 321,
                      "promiser": "$(this.bundle) activate_bundle_$(probability)000",
                      "attributes": [
                        {
                          "line": 322,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "activate_bundle_$(probability)000"
                          }
                        }
                      ]
                    },
                    {
                      "line": 324,
                      "promiser": "$(this.bundle) activate_bundle_$(probability)001",
                      "attributes": [
                        {
                          "line": 325,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "activate_bundle_$(probability)001"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 328,
          "namespace": "default",
          "name": "prunedir",
          "bundleType": "agent",
          "arguments": [
            "dir",
            "max_days"
          ],
          "promiseTypes": [
            {
              "line": 349,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 350,
                      "promiser": "$(dir)",
                      "attributes": [
                        {
                          "line": 351,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete plain files inside directory older than max_days"
                          }
                        },
                        {
                          "line": 352,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        },
                        {
                          "line": 353,
                          "lval": "file_select",
                          "rval": {
                            "type": "functionCall",
                            "name": "filetype_older_than",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "plain"
                              },
                              {
                                "type": "string",
                                "value": "$(max_days)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 354,
                          "lval": "depth_search",
                          "rval": {
                            "type": "functionCall",
                            "name": "recurse",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 357,
          "namespace": "default",
          "name": "tcdb_fix",
          "bundleType": "agent",
          "arguments": [],
          "promiseTypes": [
            {
              "line": 374,
              "name": "vars",
              "contexts": [
                {
                  "name": "linux",
                  "promises": [
                    {
                      "line": 377,
                      "promiser": "db",
                      "attributes": [
                        {
                          "line": 377,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "splitstring",
                            "arguments": [
                              {
                                "type": "functionCall",
                                "name": "execresult",
                                "arguments": [
                                  {
                                    "type": "string",
                                    "value": "/usr/bin/find $(sys.workdir) -name \\'*.tcdb\\' 2>/dev/null"
                                  },
                                  {
                                    "type": "string",
                                    "value": "useshell"
                                  }
                                ]
                              },
                              {
                                "type": "string",
                                "value": "\\n"
                              },
                              {
                                "type": "string",
                                "value": "1000"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 380,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 383,
                      "promiser": "hourly_class",
                      "attributes": [
                        {
                          "line": 383,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "splayclass",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(sys.host)$(sys.ipv4)"
                              },
                              {
                                "type": "string",
                                "value": "hourly"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "hourly_class.linux",
                  "promises": [
                    {
                      "line": 386,
                      "promiser": "detected_invalid_record_$(db)",
                      "attributes": [
                        {
                          "line": 386,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "returnszero",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "/var/cfengine/bin/tchmgr optimize $(db) 2>&1 | grep -q \\'invalid record header\\'"
                              },
                              {
                                "type": "string",
                                "value": "useshell"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 389,
              "name": "commands",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 391,
                      "promiser": "$(paths.rm)",
                      "attributes": [
                        {
                          "line": 392,
                          "lval": "args",
                          "rval": {
                            "type": "string",
                            "value": "-f $(db)"
                          }
                        },
                        {
                          "line": 393,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "detected_invalid_record_$(db)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 394,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "scoped_classes_generic",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "bundle"
                              },
                              {
                                "type": "string",
                                "value": "absent_$(db)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 395,
                          "lval": "handle",
                          "rval": {
                            "type": "string",
                            "value": "fix_tcdb_commands_detected_invalid_record_rm_$(db)"
                          }
                        },
                        {
                          "line": 396,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Invalid record headers indicate that the database corruption is beyond repair. It will be automatically re-created."
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 399,
              "name": "reports",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 401,
                      "promiser": "$(this.bundle) $(sys.fqhost): Detected invalid record header in $(db) - tried to repair",
                      "attributes": [
                        {
                          "line": 402,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "detected_invalid_record_$(db)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 404,
                      "promiser": "$(this.bundle) $(sys.fqhost): Repair failed, removed corrupt database: $(db)",
                      "attributes": [
                        {
                          "line": 405,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "absent_$(db)_repaired"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 408,
          "namespace": "default",
          "name": "url_ping",
          "bundleType": "agent",
          "arguments": [
            "host",
            "method",
            "port",
            "uri"
          ],
          "promiseTypes": [
            {
              "line": 433,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 434,
                      "promiser": "url_check",
                      "attributes": [
                        {
                          "line": 437,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "readtcp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(host)"
                              },
                              {
                                "type": "string",
                                "value": "$(port)"
                              },
                              {
                                "type": "string",
                                "value": "$(method) $(uri) HTTP/1.1$(const.r)$(const.n)Host:$(host)$(const.r)$(const.n)$(const.r)$(const.n)"
                              },
                              {
                                "type": "string",
                                "value": "20"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 439,
                      "promiser": "chost",
                      "attributes": [
                        {
                          "line": 439,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(host)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 441,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 442,
                      "promiser": "url_ok_$(chost)",
                      "attributes": [
                        {
                          "line": 443,
                          "lval": "scope",
                          "rval": {
                            "type": "string",
                            "value": "namespace"
                          }
                        },
                        {
                          "line": 445,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "[^\\n]*200 OK.*\\n.*"
                              },
                              {
                                "type": "string",
                                "value": "$(url_check)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 447,
                      "promiser": "url_not_ok_$(chost)",
                      "attributes": [
                        {
                          "line": 448,
                          "lval": "scope",
                          "rval": {
                            "type": "string",
                            "value": "namespace"
                          }
                        },
                        {
                          "line": 450,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "regcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "[^\\n]*200 OK.*\\n.*"
                              },
                              {
                                "type": "string",
                                "value": "$(url_check)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 452,
              "name": "reports",
              "contexts": [
                {
                  "name": "verbose_mode",
                  "promises": [
                    {
                      "line": 454,
                      "promiser": "$(this.bundle): $(method) $(host):$(port)/$(uri) got 200 OK",
                      "attributes": [
                        {
                          "line": 455,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "url_ok_$(chost)"
                          }
                        }
                      ]
                    },
                    {
                      "line": 456,
                      "promiser": "$(this.bundle): $(method) $(host):$(port)/$(uri) did *not* get 200 OK",
                      "attributes": [
                        {
                          "line": 457,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "url_not_ok_$(chost)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 460,
          "namespace": "default",
          "name": "git_init",
          "bundleType": "agent",
          "arguments": [
            "repo_path"
          ],
          "promiseTypes": [
            {
              "line": 483,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 484,
                      "promiser": "ok_norepo",
                      "attributes": [
                        {
                          "line": 484,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 486,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_norepo",
                  "promises": [
                    {
                      "line": 488,
                      "promiser": "git_init",
                      "attributes": [
                        {
                          "line": 488,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "init"
                              },
                              {
                                "type": "string",
                                "value": ""
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 491,
          "namespace": "default",
          "name": "git_add",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "file"
          ],
          "promiseTypes": [
            {
              "line": 511,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 512,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 512,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 514,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 516,
                      "promiser": "git_add",
                      "attributes": [
                        {
                          "line": 516,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "add"
                              },
                              {
                                "type": "string",
                                "value": "$(file)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 519,
          "namespace": "default",
          "name": "git_checkout",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "branch"
          ],
          "promiseTypes": [
            {
              "line": 539,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 540,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 540,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 542,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 544,
                      "promiser": "git_checkout",
                      "attributes": [
                        {
                          "line": 544,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "checkout"
                              },
                              {
                                "type": "string",
                                "value": "$(branch)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 547,
          "namespace": "default",
          "name": "git_checkout_new_branch",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "new_branch"
          ],
          "promiseTypes": [
            {
              "line": 572,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 573,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 573,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 575,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 577,
                      "promiser": "git_checkout",
                      "attributes": [
                        {
                          "line": 577,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "checkout -b"
                              },
                              {
                                "type": "string",
                                "value": "$(branch)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 580,
          "namespace": "default",
          "name": "git_commit",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "message"
          ],
          "promiseTypes": [
            {
              "line": 600,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 601,
                      "promiser": "ok_repo",
                      "attributes": [
                        {
                          "line": 601,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "fileexists",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)/.git"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 603,
              "name": "methods",
              "contexts": [
                {
                  "name": "ok_repo",
                  "promises": [
                    {
                      "line": 605,
                      "promiser": "git_commit",
                      "attributes": [
                        {
                          "line": 605,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "git",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              },
                              {
                                "type": "string",
                                "value": "commit"
                              },
                              {
                                "type": "string",
                                "value": "-m \\\"$(message)\\\""
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 608,
          "namespace": "default",
          "name": "git",
          "bundleType": "agent",
          "arguments": [
            "repo_path",
            "subcmd",
            "args"
          ],
          "promiseTypes": [
            {
              "line": 629,
              "name": "commands",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 630,
                      "promiser": "$(paths.path[git])",
                      "attributes": [
                        {
                          "line": 631,
                          "lval": "args",
                          "rval": {
                            "type": "string",
                            "value": "$(subcmd) $(args)"
                          }
                        },
                        {
                          "line": 632,
                          "lval": "contain",
                          "rval": {
                            "type": "functionCall",
                            "name": "in_dir",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(repo_path)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 635,
          "namespace": "default",
          "name": "cmerge",
          "bundleType": "agent",
          "arguments": [
            "varlist"
          ],
          "promiseTypes": [
            {
              "line": 672,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 673,
                      "promiser": "all",
                      "attributes": [
                        {
                          "line": 673,
                          "lval": "data",
                          "rval": {
                            "type": "functionCall",
                            "name": "parsejson",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "[]"
                              }
                            ]
                          }
                        },
                        {
                          "line": 673,
                          "lval": "policy",
                          "rval": {
                            "type": "string",
                            "value": "free"
                          }
                        }
                      ]
                    },
                    {
                      "line": 674,
                      "promiser": "all",
                      "attributes": [
                        {
                          "line": 674,
                          "lval": "data",
                          "rval": {
                            "type": "functionCall",
                            "name": "mergedata",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "all"
                              },
                              {
                                "type": "string",
                                "value": "$(varlist)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 674,
                          "lval": "policy",
                          "rval": {
                            "type": "string",
                            "value": "free"
                          }
                        }
                      ]
                    },
                    {
                      "line": 675,
                      "promiser": "all_str",
                      "attributes": [
                        {
                          "line": 675,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "format",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "%S"
                              },
                              {
                                "type": "string",
                                "value": "all"
                              }
                            ]
                          }
                        },
                        {
                          "line": 675,
                          "lval": "policy",
                          "rval": {
                            "type": "string",
                            "value": "free"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 57,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 60,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "@(bundles_common.inputs)"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    }