{
      "bundles": [
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 59,
          "namespace": "default",
          "name": "cronjob",
          "bundleType": "agent",
          "arguments": [
            "commands",
            "user",
            "hours",
            "mins"
          ],
          "promiseTypes": [
            {
              "line": 66,
              "name": "vars",
              "contexts": [
                {
                  "name": "SuSE",
                  "promises": [
                    {
                      "line": 68,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 68,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron/tabs"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "redhat|fedora",
                  "promises": [
                    {
                      "line": 70,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 70,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "freebsd",
                  "promises": [
                    {
                      "line": 72,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 72,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/cron/tabs"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!(SuSE|redhat|fedora|freebsd)",
                  "promises": [
                    {
                      "line": 74,
                      "promiser": "crontab",
                      "attributes": [
                        {
                          "line": 74,
                          "lval": "string",
                          "rval": {
                            "type": "string",
                            "value": "/var/spool/cron/crontabs"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 76,
              "name": "files",
              "contexts": [
                {
                  "name": "!windows",
                  "promises": [
                    {
                      "line": 79,
                      "promiser": "$(crontab)/$(user)",
                      "attributes": [
                        {
                          "line": 81,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "A user\\'s regular batch jobs are added to this file"
                          }
                        },
                        {
                          "line": 82,
                          "lval": "create",
                          "rval": {
                            "type": "string",
                            "value": "true"
                          }
                        },
                        {
                          "line": 83,
                          "lval": "edit_line",
                          "rval": {
                            "type": "functionCall",
                            "name": "append_if_no_line",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(mins) $(hours) * * * $(commands)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 84,
                          "lval": "perms",
                          "rval": {
                            "type": "functionCall",
                            "name": "mo",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "600"
                              },
                              {
                                "type": "string",
                                "value": "$(user)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 85,
                          "lval": "classes",
                          "rval": {
                            "type": "functionCall",
                            "name": "if_repaired",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "changed_crontab"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 87,
              "name": "processes",
              "contexts": [
                {
                  "name": "changed_crontab",
                  "promises": [
                    {
                      "line": 90,
                      "promiser": "cron",
                      "attributes": [
                        {
                          "line": 91,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Most crons need to be huped after file changes"
                          }
                        },
                        {
                          "line": 92,
                          "lval": "signals",
                          "rval": {
                            "type": "list",
                            "value": [
                              {
                                "type": "string",
                                "value": "hup"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 96,
          "namespace": "default",
          "name": "rm_rf",
          "bundleType": "agent",
          "arguments": [
            "name"
          ],
          "promiseTypes": [
            {
              "line": 109,
              "name": "methods",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 110,
                      "promiser": "rm",
                      "attributes": [
                        {
                          "line": 110,
                          "lval": "usebundle",
                          "rval": {
                            "type": "functionCall",
                            "name": "rm_rf_depth",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(name)"
                              },
                              {
                                "type": "string",
                                "value": "inf"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 114,
          "namespace": "default",
          "name": "rm_rf_depth",
          "bundleType": "agent",
          "arguments": [
            "name",
            "depth"
          ],
          "promiseTypes": [
            {
              "line": 128,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 129,
                      "promiser": "isdir",
                      "attributes": [
                        {
                          "line": 129,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "isdir",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(name)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 130,
              "name": "files",
              "contexts": [
                {
                  "name": "isdir",
                  "promises": [
                    {
                      "line": 132,
                      "promiser": "$(name)",
                      "attributes": [
                        {
                          "line": 133,
                          "lval": "file_select",
                          "rval": {
                            "type": "symbol",
                            "value": "all"
                          }
                        },
                        {
                          "line": 134,
                          "lval": "depth_search",
                          "rval": {
                            "type": "functionCall",
                            "name": "recurse_with_base",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(depth)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 135,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "!isdir",
                  "promises": [
                    {
                      "line": 138,
                      "promiser": "$(name)",
                      "attributes": [
                        {
                          "line": 138,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 141,
          "namespace": "default",
          "name": "fileinfo",
          "bundleType": "agent",
          "arguments": [
            "f"
          ],
          "promiseTypes": [
            {
              "line": 192,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 193,
                      "promiser": "fields",
                      "attributes": [
                        {
                          "line": 193,
                          "lval": "slist",
                          "rval": {
                            "type": "functionCall",
                            "name": "splitstring",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "size,gid,uid,ino,nlink,ctime,atime,mtime,mode,modeoct,permstr,permoct,type,devno,dev_minor,dev_major,basename,dirname,linktarget,linktarget_shallow"
                              },
                              {
                                "type": "string",
                                "value": ","
                              },
                              {
                                "type": "string",
                                "value": "999"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 195,
                      "promiser": "stat[$(f)][$(fields)]",
                      "attributes": [
                        {
                          "line": 195,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "filestat",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(f)"
                              },
                              {
                                "type": "string",
                                "value": "$(fields)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 197,
              "name": "reports",
              "contexts": [
                {
                  "name": "verbose_mode",
                  "promises": [
                    {
                      "line": 199,
                      "promiser": "$(this.bundle): file $(f) has $(fields) = $(stat[$(f)][$(fields)])",
                      "attributes": []
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 202,
          "namespace": "default",
          "name": "logrotate",
          "bundleType": "agent",
          "arguments": [
            "log_files",
            "max_size",
            "rotate_levels"
          ],
          "promiseTypes": [
            {
              "line": 225,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 226,
                      "promiser": "$(log_files)",
                      "attributes": [
                        {
                          "line": 227,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Rotate file if above specified size"
                          }
                        },
                        {
                          "line": 228,
                          "lval": "rename",
                          "rval": {
                            "type": "functionCall",
                            "name": "rotate",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(rotate_levels)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 229,
                          "lval": "file_select",
                          "rval": {
                            "type": "functionCall",
                            "name": "bigger_than",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(max_size)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 232,
          "namespace": "default",
          "name": "prunedir",
          "bundleType": "agent",
          "arguments": [
            "dir",
            "max_days"
          ],
          "promiseTypes": [
            {
              "line": 252,
              "name": "files",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 253,
                      "promiser": "$(dir)",
                      "attributes": [
                        {
                          "line": 254,
                          "lval": "comment",
                          "rval": {
                            "type": "string",
                            "value": "Delete plain files inside directory older than max_days"
                          }
                        },
                        {
                          "line": 255,
                          "lval": "delete",
                          "rval": {
                            "type": "symbol",
                            "value": "tidy"
                          }
                        },
                        {
                          "line": 256,
                          "lval": "file_select",
                          "rval": {
                            "type": "functionCall",
                            "name": "filetype_older_than",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "plain"
                              },
                              {
                                "type": "string",
                                "value": "$(max_days)"
                              }
                            ]
                          }
                        },
                        {
                          "line": 257,
                          "lval": "depth_search",
                          "rval": {
                            "type": "functionCall",
                            "name": "recurse",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "1"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 260,
          "namespace": "default",
          "name": "url_ping",
          "bundleType": "agent",
          "arguments": [
            "host",
            "method",
            "port",
            "uri"
          ],
          "promiseTypes": [
            {
              "line": 284,
              "name": "vars",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 285,
                      "promiser": "url_check",
                      "attributes": [
                        {
                          "line": 288,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "readtcp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(host)"
                              },
                              {
                                "type": "string",
                                "value": "$(port)"
                              },
                              {
                                "type": "string",
                                "value": "$(method) $(uri) HTTP/1.1$(const.r)$(const.n)Host:$(host)$(const.r)$(const.n)$(const.r)$(const.n)"
                              },
                              {
                                "type": "string",
                                "value": "20"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 290,
                      "promiser": "chost",
                      "attributes": [
                        {
                          "line": 290,
                          "lval": "string",
                          "rval": {
                            "type": "functionCall",
                            "name": "canonify",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "$(host)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 292,
              "name": "classes",
              "contexts": [
                {
                  "name": "any",
                  "promises": [
                    {
                      "line": 293,
                      "promiser": "url_ok_$(chost)",
                      "attributes": [
                        {
                          "line": 294,
                          "lval": "scope",
                          "rval": {
                            "type": "string",
                            "value": "namespace"
                          }
                        },
                        {
                          "line": 296,
                          "lval": "expression",
                          "rval": {
                            "type": "functionCall",
                            "name": "regcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "[^\\n]*200 OK.*\\n.*"
                              },
                              {
                                "type": "string",
                                "value": "$(url_check)"
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "line": 298,
                      "promiser": "url_not_ok_$(chost)",
                      "attributes": [
                        {
                          "line": 299,
                          "lval": "scope",
                          "rval": {
                            "type": "string",
                            "value": "namespace"
                          }
                        },
                        {
                          "line": 301,
                          "lval": "not",
                          "rval": {
                            "type": "functionCall",
                            "name": "regcmp",
                            "arguments": [
                              {
                                "type": "string",
                                "value": "[^\\n]*200 OK.*\\n.*"
                              },
                              {
                                "type": "string",
                                "value": "$(url_check)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "line": 303,
              "name": "reports",
              "contexts": [
                {
                  "name": "verbose_mode",
                  "promises": [
                    {
                      "line": 305,
                      "promiser": "$(this.bundle): $(method) $(host):$(port)/$(uri) got 200 OK",
                      "attributes": [
                        {
                          "line": 306,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "url_ok_$(chost)"
                          }
                        }
                      ]
                    },
                    {
                      "line": 307,
                      "promiser": "$(this.bundle): $(method) $(host):$(port)/$(uri) did *not* get 200 OK",
                      "attributes": [
                        {
                          "line": 308,
                          "lval": "ifvarclass",
                          "rval": {
                            "type": "string",
                            "value": "url_not_ok_$(chost)"
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ],
      "bodies": [
        {
          "sourcePath": "../masterfiles/lib/3.6/bundles.cf",
          "line": 50,
          "namespace": "default",
          "name": "control",
          "bodyType": "file",
          "arguments": [],
          "contexts": [
            {
              "name": "any",
              "attributes": [
                {
                  "line": 52,
                  "lval": "inputs",
                  "rval": {
                    "type": "list",
                    "value": [
                      {
                        "type": "string",
                        "value": "$(sys.local_libdir)/files.cf"
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      ]
    }